{"version":3,"sources":["helpers/PageAnimationWrapper.js","helpers/useTitle.js","images/logo.png","components/Loaders/AnimateLoader.js","services/auth.service.js","components/misc/Buttons.js","services/storage.service.js","content/Login.js","content/SignUp.js","images/phone.png","images/swobflow.gif","images/logo-icon-light.png","components/Navbar.js","components/MainNavbar.js","components/Footer.js","components/misc/Text.js","content/HomePage.js","services/profile.service.js","content/Profile.js","services/wallet.service.js","content/Wallet/Wallet.js","content/Wallet/index.js","content/Wallet/WalletRedirect.js","content/NotFoundPage.js","content/SettingsPage.js","content/DashBoard.js","content/PrivacyPage.js","content/ContactPage.js","App.js","reportWebVitals.js","index.js"],"names":["StyledDiv","tw","div","AnimationReveal","disabled","children","Array","isArray","directions","childrenWithAnimation","map","child","i","AnimatedSlideInComponent","direction","length","offset","useInView","ref","inView","x","target","initial","motion","section","animate","transitionEnd","transition","type","damping","PageAnimationWrapper","props","className","useTitle","title","useEffect","prevTitle","document","LoadingContainer","InlineLoader","AnimateLoader","axios","defaults","baseURL","process","IconButton","span","ToggleButton","onClick","toggleFunc","value","size","getLocalState","JSON","parse","sessionStorage","getItem","getToken","setToken","token","setItem","stringify","removeToken","removeItem","removeProfile","Container","Content","MainContainer","LogoImage","img","MainContent","Heading","h1","FormContainer","Form","form","Input","input","Label","label","FormGroup","ErrorMessage","p","SubmitButton","Button","VerifyButton","button","IllustrationContainer","IllustrationImage","styled","imageSrc","PhoneNumberInput","PhoneInput","LogInSchema","yup","shape","phone_number","required","password","min","ResetPasswordSchema","confirmPassword","oneOf","PhoneNumberPage","setLoading","setPage","useState","number","setNumber","handlePhoneVerify","evt","preventDefault","post","then","response","status","toaster","success","description","data","catch","error","danger","notify","request","onSubmit","flags","international","countryCallingCodeEditable","placeholder","defaultCountry","onChange","CodeVerifyPage","code","setCode","handleCodeVerification","session","session_id","svid","verifyResetCode","name","ResetPasswordPage","toggle","setToggle","toggle2","setToggle2","useForm","resolver","yupResolver","register","handleSubmit","watch","errors","formState","auth_key","new_password","message","Login","dispatch","useAppContext","loading","page","control","src","logo","setTimeout","payload","id","render","field","appearance","height","iconBefore","FiLogIn","to","CheckBox","SignUpSchema","username","acceptTerms","SignUp","history","useHistory","stage","setStage","verifyCode","push","splitNumber","parsePhoneNumber","nationalNumber","country_code","countryCallingCode","registerUser","href","rel","FiUserPlus","isLoading","MainHeader","header","NavContainer","NavButton","NavLink","Link","ExtLink","a","StartedExtLink","LogoLink","UserActions","UserActionsButton","MobileNav","nav","NavToggle","DesktopNav","AboutLogo","AboutContainer","AboutDetails","Navbar","path","useRouteMatch","isAboutOpen","setIsAboutOpen","open","setOpen","state","handleLogOut","userProfile","defaultLinks","Fragment","actionLinks","Avatar","LogOutIcon","mobileActionLinks","defaultLogoLink","alt","SideSheet","width","isShown","onCloseComplete","Dialog","hasFooter","swobLogo","SignUpLink","LogInLink","MainNavbar","footer","LogoIcon","FooterLink","FooterNavLink","DescLink","Footer","Logo","Date","getFullYear","HeadingRow","h2","Text","TextContainer","SectionContainer","ImageContainer","DetailsContainer","SubHeading","Description","h3","Image","DescItem","IconBlock","Column","Row","HomePage","phone","swobflow","ProfileName","QRContainer","QRCode","Meta","SyncButton","ButtonGroup","Profile","ws","connected","paused","acked","qrLink","syncState","setSyncState","Object","keys","getProfileInfo","display","alignItems","justifyContent","Spinner","close","created","toLocaleString","last_login","authObj","AUTH_KEY","AUTH_ID","ROUTER_URL","WebSocket","url","onopen","onmessage","onclose","onerror","err","handleSync","StoreButton","PlatformTitle","h4","PlatformDescription","Card","StoreContainer","Accordion","Panel","Paragraph","Placeholder","Wallet","tokens","setTokens","providers","setProviders","setPassword","isValid","setIsValid","provider","platform","revokedTokenDetails","setRevokedTokenDetails","platforms","modal","alert","setAlert","getProviders","user_provider","default_provider","getPlatformToken","getPlatformOauthToken","openSignInWindow","console","log","handleRevokeToken","revokeToken","window","location","reload","windowObjectReference","previousUrl","removeEventListener","receiveMessage","closed","focus","addEventListener","event","origin","source","savePlatformOauthToken","style","marginTop","rows","active","collapsible","bordered","FiSave","email","intent","FiTrash2","hasClose","shouldCloseOnOverlayClick","shouldCloseOnEscapePress","isConfirmDisabled","onConfirm","confirmLabel","inputHeight","minLength","WalletRedirect","URLSearchParams","search","get","opener","postMessage","NotFoundPage","Title","ChangePasswordSchema","ChangePassword","toggle3","setToggle3","changePassword","DeleteAccountSchema","DeleteAccount","delete","deleteAccount","NewNumberSchema","NewNumber","new_phone_number","addPhoneNumber","verifyPhoneNumber","SettingsPage","DashBoard","exact","component","PrivacyPage","ContactPage","AppContext","React","createContext","useContext","Reducer","action","Error","initialState","App","useReducer","setLocalState","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bba761f8.chunk.js","sourcesContent":["import React from \"react\";\nimport tw from \"twin.macro\";\n\n/* framer-motion and useInView here are used to animate the sections in when we reach them in the viewport\n */\nimport { motion } from \"framer-motion\";\nimport useInView from \"@owaiswiz/use-in-view\";\n\nconst StyledDiv = tw.div`font-display min-h-screen text-secondary-500 overflow-hidden`;\nfunction AnimationReveal({ disabled, children }) {\n  if (disabled) {\n    return <>{children}</>;\n  }\n\n  if (!Array.isArray(children)) children = [children];\n\n  const directions = [\"left\", \"right\"];\n  const childrenWithAnimation = children.map((child, i) => {\n    return (\n      <AnimatedSlideInComponent key={i} direction={directions[i % directions.length]}>\n        {child}\n      </AnimatedSlideInComponent>\n    );\n  });\n  return <>{childrenWithAnimation}</>;\n}\n\nfunction AnimatedSlideInComponent({ direction = \"left\", offset = 30, children }) {\n  const [ref, inView] = useInView(30);\n\n  const x = { target: \"0%\" };\n\n  if (direction === \"left\") x.initial = \"-150%\";\n  else x.initial = \"150%\";\n\n  return (\n    <motion.section\n      initial={{ x: x.initial }}\n      animate={{\n        x: inView && x.target,\n        transitionEnd: {\n          x: inView && 0\n        }\n      }}\n      transition={{ type: \"spring\", damping: 19 }}\n      ref={ref}\n    >\n      {children}\n    </motion.section>\n  );\n}\n\nconst PageAnimationWrapper = (props) => (\n  <StyledDiv className=\"App\">\n    <AnimationReveal {...props} />\n  </StyledDiv>\n);\n\nexport default PageAnimationWrapper;","import { useEffect } from 'react';\n\nconst useTitle = (title) => {\n    useEffect(() => {\n        const prevTitle = document.title;\n        document.title = title;\n\n        return () => {\n            document.title = prevTitle;\n        };\n    }, [title]);\n}\nexport default useTitle;","export default __webpack_public_path__ + \"static/media/logo.892d9b9d.png\";","import React from \"react\";\nimport tw from \"twin.macro\";\nimport { Spinner } from \"evergreen-ui\";\n\nconst LoadingContainer = tw.div`grid place-items-center`;\n\nconst AnimateLoader = () => {\n    return (\n        <LoadingContainer tw=\"h-screen\">\n            <div>\n                <Spinner tw=\"mx-auto\" />\n                <p tw=\"mt-2\">Loading please wait</p>\n            </div>\n        </LoadingContainer>\n    );\n}\n\nexport const InlineLoader = () => {\n    return (\n        <LoadingContainer tw=\"h-80\">\n            <div>\n                <Spinner tw=\"mx-auto\" />\n                <p tw=\"mt-2\">Loading please wait</p>\n            </div>\n        </LoadingContainer>\n    );\n}\n\nexport default AnimateLoader;","import axios from 'axios';\n\nlet AUTH_URL = process.env.REACT_APP_API_URL;\naxios.defaults.baseURL = AUTH_URL;\n\nexport const registerUser = ({ username, country_code, phone_number, password }) => {\n    return axios.post(\"/users/profiles/register\",\n        {\n            name: username,\n            country_code: country_code,\n            phone_number: phone_number,\n            password: password,\n\n        }).then(response => response)\n}\n\nexport const verifyCode = (code, session_id, svid) => {\n    return axios.post(\"/users/profiles/register/2fa\",\n        {\n            code: code,\n            session_id: session_id,\n            svid: svid\n        }).then(response => response)\n}\n\nexport const userLogin = (phone_number, password) => {\n    return axios.post(\"/users/profiles/login\",\n        {\n            phone_number: phone_number,\n            password: password\n        }).then(response => response)\n};\n\nexport const resetPassword = (phone_number) => {\n    return axios.post(\"users/profiles/password/recovery\", {\n        phone_number: phone_number,\n    }).then(response => response)\n}\n\nexport const verifyResetCode = (code, session_id, svid) => {\n    return axios.post(\"/users/profiles/password/recovery/2fa\", {\n            code: code,\n            session_id: session_id,\n            svid: svid\n        }).then(response => response)\n}\n\nexport const changePassword = (auth_key, password) => {\n    return axios.post(\"/users/profiles/password/recovery/new\", {\n        auth_key: auth_key,\n        new_password: password,\n    }).then(response => response)\n}\n\n","import tw from \"twin.macro\";\nimport { FiEye, FiEyeOff } from \"react-icons/fi\";\n\nconst IconButton = tw.span`absolute top-3 right-3 flex items-center  cursor-pointer`;\n\nconst ToggleButton = (props) => {\n    return (\n        <IconButton onClick={() => props.toggleFunc(!props.value)}>\n            {props.value ? <FiEyeOff size={16} /> : <FiEye size={16} />}\n        </IconButton>\n    )\n}\n\nexport { ToggleButton }","\nexport const setLocalState = (state) => {\n    sessionStorage.setItem(\"SWOB\", JSON.stringify(state))\n}\n\nexport const getLocalState = () => {\n    return JSON.parse(sessionStorage.getItem(\"SWOB\"));\n}\n\nexport const clearLocalState = () => {\n    sessionStorage.removeItem(\"SWOB\");\n}\n\n\nexport const getToken = () => {\n    return JSON.parse(sessionStorage.getItem('SWOB_KEY'));\n};\n\nexport const setToken = (token) => {\n    sessionStorage.setItem('SWOB_KEY', JSON.stringify(token));\n};\n\nexport const removeToken = () => {\n    sessionStorage.removeItem('SWOB_KEY');\n}\n\nexport const getProfile = () => {\n    return JSON.parse(sessionStorage.getItem(\"SWOB_USER\"));\n}\n\nexport const setProfile = (profile) => {\n    removeProfile()\n    sessionStorage.setItem('SWOB_USER', JSON.stringify(profile));\n}\n\nexport const removeProfile = () => {\n    sessionStorage.removeItem(\"SWOB_USER\");\n}","import React, { useState } from \"react\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper.js\";\nimport useTitle from \"helpers/useTitle\";\nimport logo from \"images/logo.png\";\nimport PhoneInput from \"react-phone-number-input\";\nimport AnimateLoader from \"components/Loaders/AnimateLoader\";\nimport PasswordStrengthBar from \"react-password-strength-bar\";\nimport flags from 'react-phone-number-input/flags'\nimport 'react-phone-number-input/style.css'\nimport { FiLogIn } from \"react-icons/fi\";\nimport { Button, toaster } from 'evergreen-ui';\nimport { userLogin, resetPassword, verifyResetCode, changePassword } from 'services/auth.service';\nimport { Link } from \"react-router-dom\";\nimport { ToggleButton } from \"components/misc/Buttons\";\nimport { useAppContext } from \"App\";\nimport { getToken, setToken, removeToken } from \"services/storage.service\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst Container = tw.div`relative min-h-screen bg-white text-white font-medium flex justify-center `;\nconst Content = tw.div` m-0 text-gray-900  md:flex justify-center flex-1`;\nconst MainContainer = tw.div`lg:w-1/2 xl:w-1/3 2xl:w-1/4 p-2 sm:p-12`;\nconst LogoImage = tw.img`h-60 mx-auto block`;\nconst MainContent = tw.div`flex flex-col items-center`;\nconst Heading = tw.h1`text-2xl xl:text-3xl font-bold`;\nconst FormContainer = tw.div`w-full flex-1 mt-8`;\nconst Form = tw.form`mx-auto px-4 sm:px-3`;\nconst Input = tw.input`relative w-full rounded-md py-2 px-3 mb-2 text-gray-700 border border-gray-400 hocus:border-primary-900`;\nconst Label = tw.label`block font-light mb-2`;\nconst FormGroup = tw.div`relative mb-4`;\nconst ErrorMessage = tw.p`text-sm text-red-900 mb-4`;\nconst SubmitButton = tw(Button)`w-full rounded-lg py-2`;\nconst VerifyButton = tw.button`block font-bold text-white text-center rounded-md w-1/2 lg:w-1/3 mx-auto px-3 py-2  text-base bg-primary-900`;\nconst IllustrationContainer = tw.div`lg:flex flex-1 bg-primary-200 hidden`;\nconst IllustrationImage = styled.div`\n  ${props => `background-image: url(\"${props.imageSrc}\");`}\n  ${tw` w-full bg-cover bg-center bg-no-repeat`}\n`;\n\nconst PhoneNumberInput = styled(PhoneInput)`\n    ${tw`p-2 border border-gray-400 hocus:border-primary-900 rounded-md mb-2`}\n  .PhoneInputCountrySelect {\n    ${tw`border-none hocus:border-none mr-8 p-4`}\n  }\n  .PhoneInputCountryIcon {\n    ${tw`border-none hocus:border-none h-5 w-7`}\n  }\n  .PhoneInputInput {\n    ${tw`focus:border-none focus:outline-none appearance-none placeholder-gray-400`}\n  }\n  .PhoneInputCountryIcon {\n    ${tw``}\n  }\n`;\n\n\nconst LogInSchema = yup.object().shape({\n  phone_number: yup.string().required('Please Enter your Phone Number'),\n  password: yup.string().min(8, 'Password must be at least 8 characters').required('Please enter your password'),\n});\n\nconst Login = () => {\n\n  useTitle(\"SWOB LogIn\");\n\n  const { dispatch } = useAppContext()\n  const [loading, setLoading] = useState(false);\n  const [toggle, setToggle] = useState(false);\n  const [page, setPage] = useState(0);\n\n  const { register, control, handleSubmit, formState: { errors } } = useForm({\n    resolver: yupResolver(LogInSchema)\n  });\n\n  const handleLogin = (data) => {\n\n    setLoading(true);\n    userLogin(data.phone_number, data.password)\n      .then(response => {\n        if (response.status === 200) {\n\n          toaster.success('Login successful', {\n            description: \"You will be redirected shortly\"\n          });\n\n          setTimeout(() => {\n            dispatch({\n              type: \"LOGIN\",\n              payload: {\n                id: response.data.id,\n                token: response.data.auth_key\n              }\n            })\n          }, 1000);\n        }\n\n      })\n      .catch(error => {\n        if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          switch (error.response.status) {\n            case 400:\n              toaster.danger('Something went wrong', {\n                description: 'We are working to resolve this. Please try again'\n              });\n              break;\n            case 401:\n              toaster.danger('Forbidden', {\n                description: 'Account is unauthorized. Sign Up to create account'\n              });\n              break;\n            case 500:\n              toaster.danger('Something went wrong', {\n                description: 'We are working to resolve this.  Please try again'\n              });\n              break;\n            default:\n              toaster.danger('Something went wrong', {\n                description: 'We are working to resolve this.  Please try again'\n              });\n          }\n          setLoading(false);\n        } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          setLoading(false);\n          toaster.danger('Network error', {\n            description: 'Please check your network and try again'\n          });\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          setLoading(false);\n          toaster.danger('Network error', {\n            description: 'Please check your network and try again'\n          });\n        }\n      })\n  };\n\n  if (loading) return <AnimateLoader />;\n\n  if (page === 1) return <PhoneNumberPage setLoading={setLoading} setPage={setPage} />\n\n  if (page === 2) return <CodeVerifyPage setLoading={setLoading} setPage={setPage} />\n\n  if (page === 3) return <ResetPasswordPage setLoading={setLoading} setPage={setPage} />;\n\n  return (\n    <PageAnimationWrapper>\n      <Container>\n        <Content>\n          <MainContainer>\n            <LogoImage src={logo} />\n            <MainContent>\n              <Heading>Sign In</Heading>\n              <FormContainer>\n                <Form onSubmit={handleSubmit(handleLogin)}>\n                  <FormGroup>\n                    <Label>Phone Number</Label>\n                    <Controller\n                      control={control}\n                      name=\"phone_number\"\n                      render={({ field: { value, onChange } }) => (\n                        <PhoneNumberInput\n                          flags={flags}\n                          international\n                          countryCallingCodeEditable={false}\n                          placeholder=\"Enter your phone number\"\n                          defaultCountry=\"CM\"\n                          value={value}\n                          type=\"tel\"\n                          onChange={onChange}\n                        />\n                      )}\n                    />\n                    {errors.phone_number && <ErrorMessage>{errors.phone_number.message}</ErrorMessage>}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Password</Label>\n                    <div tw=\"relative\">\n                      <Input\n                        type={toggle ? \"text\" : \"password\"}\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        {...register(\"password\")}\n                      />\n                      <ToggleButton\n                        toggleFunc={setToggle}\n                        value={toggle}\n                      />\n                    </div>\n                    {errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n                  </FormGroup>\n\n\n                  <SubmitButton\n                    type=\"submit\"\n                    appearance=\"primary\"\n                    height={40}\n                    iconBefore={loading ? null : FiLogIn}\n                  >\n                    Sign In\n                  </SubmitButton>\n                </Form>\n\n                <p\n                  onClick={() => setPage(1)}\n                  tw=\"text-primary-900 text-center my-4 cursor-pointer\"\n                >\n                  Forgot Password\n                </p>\n\n                <p tw=\"mt-4 text-sm text-gray-600 text-center\">\n                  Dont have an account? &nbsp;\n                  <Link to=\"/sign-up\" tw=\"text-primary-900\">\n                    Sign Up\n                  </Link>\n                </p>\n              </FormContainer>\n            </MainContent>\n          </MainContainer>\n          <IllustrationContainer>\n            {/* <IllustrationImage imageSrc={illustration} /> */}\n            <IllustrationImage imageSrc=\"https://source.unsplash.com/1600x900/?humanitarian,revolution,research,books,STEM,science\" />\n          </IllustrationContainer>\n        </Content>\n      </Container>\n    </PageAnimationWrapper>\n  )\n};\n\n\nconst ResetPasswordSchema = yup.object().shape({\n  password: yup.string().min(8, 'Password must be at least 8 characters').required('Please enter password'),\n  confirmPassword: yup.string().min(8, 'Password must be at least 8 characters').required('Please confirm your password')\n    .oneOf([yup.ref('password'), null], 'Passwords do not match')\n});\n\n\nconst PhoneNumberPage = ({ setLoading, setPage }) => {\n\n  const [number, setNumber] = useState();\n  const handlePhoneVerify = (evt) => {\n\n    evt.preventDefault();\n\n    setLoading(true);\n\n    resetPassword(number)\n      .then(response => {\n        if (response.status === 200) {\n          toaster.success(`Success, We found your account`, {\n            description: \"A verification code has been sent to your phone\"\n          });\n          setToken(response.data);\n          setPage(2);\n          setLoading(false);\n        }\n      })\n      .catch(error => {\n        if (error.response) {\n          switch (error.response.status) {\n            case 400:\n              toaster.danger(\"An error occured\", {\n                description: \"Its not your its Us. Please try again\"\n              });\n              break;\n\n            case 401:\n              toaster.danger(\"Sorry We did not find your account\", {\n                description: \"please sign up to create one\"\n              });\n              break;\n\n            case 403:\n              toaster.notify(\"Account already verified\", {\n                description: \"Please login\"\n              });\n              break;\n\n            case 409:\n              toaster.danger(\"An error occured\", {\n                description: \"An account with this number already exists.Please Log In instead\"\n              });\n              break;\n\n            case 500:\n              toaster.danger(\"An error occured\", {\n                description: \"Its not you its Us. We are working to resolve it. Please try again\"\n              });\n              break;\n\n            default:\n              toaster.danger(\"Something went wrong\", {\n                description: \"Please try again\"\n              });\n          }\n          setLoading(false);\n\n        } else if (error.request) {\n          toaster.danger(\"Network error\", {\n            description: \"Please check your network and try again\"\n          });\n          setLoading(false);\n        } else {\n          toaster.danger(\"Network error\", {\n            description: \"Please check your network and try again\"\n          });\n          setLoading(false);\n        }\n      });\n  }\n\n  return (\n    <PageAnimationWrapper>\n      <div tw=\"grid place-items-center h-screen\">\n        <div tw=\" h-56 lg:w-1/3 mx-auto\">\n          <Heading tw=\"text-gray-700 text-center\">Phone Number</Heading>\n          <FormContainer>\n            <Form onSubmit={(evt) => handlePhoneVerify(evt)}>\n              <FormGroup>\n                <PhoneNumberInput\n                  tw=\"text-gray-700 p-3\"\n                  flags={flags}\n                  international\n                  countryCallingCodeEditable={false}\n                  placeholder=\"Enter your phone number\"\n                  defaultCountry=\"CM\"\n                  value={number}\n                  type=\"tel\"\n                  onChange={setNumber}\n                />\n              </FormGroup>\n\n              <VerifyButton type=\"submit\">\n                continue\n              </VerifyButton>\n            </Form>\n          </FormContainer>\n        </div>\n\n      </div>\n    </PageAnimationWrapper>\n  )\n}\n\nconst CodeVerifyPage = ({ setLoading, setPage }) => {\n\n  const [code, setCode] = useState();\n  const handleCodeVerification = (evt) => {\n\n    evt.preventDefault();\n\n    setLoading(true);\n\n    const session = getToken();\n\n    verifyResetCode(code, session.session_id, session.svid)\n      .then(response => {\n        if (response.status === 200) {\n          toaster.success(`Success, Code Verified`);\n          setToken(response.data);\n          setPage(3);\n          setLoading(false);\n        }\n      })\n      .catch(error => {\n        if (error.response) {\n          switch (error.response.status) {\n            case 400:\n              toaster.danger(\"An error occured\", {\n                description: \"Its not your its Us. Please try again\"\n              });\n              break;\n\n            case 401:\n              toaster.danger(\"Invalid code provided\", {\n                description: \"please try again\"\n              });\n              break;\n\n            case 403:\n              toaster.notify(\"Account already verified\", {\n                description: \"Please login\"\n              });\n              break;\n\n            case 409:\n              toaster.danger(\"An error occured\", {\n                description: \"An account with this number already exists.Please Log In instead\"\n              });\n              break;\n\n            case 500:\n              toaster.danger(\"An error occured\", {\n                description: \"Its not you its Us. We are working to resolve it. Please try again\"\n              });\n              break;\n\n            default:\n              toaster.danger(\"Something went wrong\", {\n                description: \"Please try again\"\n              });\n          }\n\n        } else if (error.request) {\n          toaster.danger(\"Network error\", {\n            description: \"Please check your network and try again\"\n          });\n        } else {\n          toaster.danger(\"Network error\", {\n            description: \"Please check your network and try again\"\n          })\n        }\n        setLoading(false);\n      })\n  }\n\n\n  return (\n    <PageAnimationWrapper>\n      <div tw=\"grid place-items-center h-screen\">\n        <div tw=\" h-56 lg:w-1/3 mx-auto\">\n          <Heading tw=\"text-gray-700 text-center\">Enter verification code</Heading>\n\n          <FormContainer>\n            <Form onSubmit={(evt) => handleCodeVerification(evt)}>\n              <FormGroup>\n                <Input\n                  tw=\"p-3\"\n                  type=\"number\"\n                  name=\"code\"\n                  min={0}\n                  required\n                  placeholder=\"2FA CODE\"\n                  onChange={(evt) => setCode(evt.target.value)}\n                />\n              </FormGroup>\n\n              <VerifyButton type=\"submit\">\n                continue\n              </VerifyButton>\n\n            </Form>\n          </FormContainer>\n        </div>\n\n      </div>\n    </PageAnimationWrapper>\n  )\n}\n\nconst ResetPasswordPage = ({ setLoading, setPage }) => {\n\n  useTitle(\"Reset Password\");\n  const [toggle, setToggle] = useState(false);\n  const [toggle2, setToggle2] = useState(false);\n\n  const { register, handleSubmit, watch, formState: { errors } } = useForm({\n    resolver: yupResolver(ResetPasswordSchema)\n  });\n\n  const handleResetPassword = (data) => {\n    setLoading(true);\n    const session = getToken();\n    changePassword(session.auth_key, data.password)\n      .then(response => {\n        toaster.success(\"Password Changed successfully please login\");\n        removeToken();\n        setPage(0);\n        setLoading(false);\n      })\n      .catch((error) => {\n        if (error.response) {\n          toaster.danger(\"Request Error\", {\n            description: \"Sorry we could not change your password. Please check your network connection and try again\"\n          });\n        } else if (error.request) {\n          toaster.danger(\"Network Error\", {\n            description: \"We could not change your password. Please check your network and reload this page\"\n          });\n        } else {\n          toaster.danger(\"Profile Error\", {\n            description: \"An internal error occured. Please log out and login again\"\n          });\n        }\n        setLoading(false);\n      });\n  }\n\n\n  return (\n    <PageAnimationWrapper>\n      <div tw=\"md:border p-4 md:p-12 m-2\">\n        <div tw=\"w-full text-gray-800 text-center\">\n          <Heading>Reset Password</Heading>\n          <p tw=\"my-2\">Please use the form below to change your password</p>\n        </div>\n\n        <FormContainer tw=\"md:w-1/2 lg:w-1/3 mx-auto text-gray-900\">\n          <Form onSubmit={handleSubmit(handleResetPassword)}>\n            <FormGroup>\n              <Label>New Password</Label>\n              <div tw=\"relative\">\n                <Input\n                  tw=\"mb-2\"\n                  type={toggle ? \"text\" : \"password\"}\n                  placeholder=\"Password\"\n                  {...register(\"password\")}\n                />\n                <ToggleButton\n                  toggleFunc={setToggle}\n                  value={toggle}\n                />\n              </div>\n              {errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n              <PasswordStrengthBar password={watch(\"password\")} />\n            </FormGroup>\n\n\n            <FormGroup>\n              <Label>Confirm Password</Label>\n              <div tw=\"relative\">\n                <Input\n                  tw=\"mb-2\"\n                  type={toggle2 ? \"text\" : \"password\"}\n                  placeholder=\"retype password\"\n                  {...register(\"confirmPassword\")}\n                />\n                <ToggleButton\n                  toggleFunc={setToggle2}\n                  value={toggle2}\n                />\n              </div>\n              {errors.confirmPassword && <ErrorMessage>{errors.confirmPassword.message}</ErrorMessage>}\n              <PasswordStrengthBar password={watch(\"confirmPassword\")} />\n            </FormGroup>\n\n            <VerifyButton tw=\"lg:w-1/2\" type=\"submit\">\n              Change Password\n            </VerifyButton>\n          </Form>\n        </FormContainer>\n      </div>\n    </PageAnimationWrapper>\n  );\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper.js\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport logo from \"images/logo.png\";\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport useTitle from \"helpers/useTitle\";\nimport PhoneInput, { parsePhoneNumber } from \"react-phone-number-input\";\nimport AnimateLoader from \"components/Loaders/AnimateLoader\";\nimport flags from 'react-phone-number-input/flags'\nimport 'react-phone-number-input/style.css'\nimport { FiUserPlus } from \"react-icons/fi\";\nimport { Button, toaster } from 'evergreen-ui';\nimport { registerUser, verifyCode } from 'services/auth.service';\nimport { getToken, setToken, removeToken } from \"services/storage.service\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ToggleButton } from \"components/misc/Buttons\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst Container = tw.div`relative min-h-screen bg-white text-white font-medium flex justify-center `;\nconst Content = tw.div` m-0 text-gray-900  md:flex justify-center flex-1`;\nconst MainContainer = tw.div`lg:w-1/2 xl:w-1/3 2xl:w-1/4 p-2 sm:p-12`;\nconst LogoImage = tw.img`h-60 mx-auto block`;\nconst MainContent = tw.div`flex flex-col items-center`;\nconst Heading = tw.h1`text-2xl xl:text-3xl font-bold`;\nconst FormContainer = tw.div`w-full flex-1 mt-8`;\nconst Form = tw.form`mx-auto px-4 sm:px-3`;\nconst Input = tw.input`relative w-full rounded-md py-2 px-3 mb-2 text-gray-700 border border-gray-400 hocus:border-primary-900`;\nconst CheckBox = tw.input`h-5 w-5 bg-primary-900 text-primary-900 mr-2`;\nconst Label = tw.label`block font-light mb-2`;\nconst FormGroup = tw.div`relative mb-4`;\nconst ErrorMessage = tw.p`text-sm text-red-900 mb-4`;\nconst SubmitButton = tw(Button)`w-full rounded-md py-2`;\nconst VerifyButton = tw.button`block font-bold text-white text-center rounded-md w-1/2 lg:w-1/3 mx-auto px-3 py-2  text-base bg-primary-900`;\nconst IllustrationContainer = tw.div`lg:flex flex-1 bg-primary-200 hidden`;\nconst IllustrationImage = styled.div`\n  ${props => `background-image: url(\"${props.imageSrc}\");`}\n  ${tw` w-full bg-cover bg-center bg-no-repeat`}\n`;\n\nconst PhoneNumberInput = styled(PhoneInput)`\n    ${tw`p-2 border border-gray-400 hocus:border-primary-900 rounded-md mb-2`}\n  .PhoneInputCountrySelect {\n    ${tw`border-none hocus:border-none mr-8 p-4`}\n  }\n  .PhoneInputCountryIcon {\n    ${tw`border-none hocus:border-none h-5 w-7`}\n  }\n  .PhoneInputInput {\n    ${tw`focus:border-none focus:outline-none appearance-none placeholder-gray-400`}\n  }\n  .PhoneInputCountryIcon {\n    ${tw``}\n  }\n`;\n\n\nconst SignUpSchema = yup.object().shape({\n  username: yup.string().required('User Name is required'),\n  phone_number: yup.string().required('Phone Number is required'),\n  password: yup.string().min(8, 'Password must be at least 8 characters').required('Password is required'),\n  confirmPassword: yup.string().min(8, 'Password must be at least 8 characters').required('Please confirm your password')\n    .oneOf([yup.ref('password'), null], 'Passwords do not match'),\n  acceptTerms: yup.bool().oneOf([true], 'Please review and accept terms and conditions to proceed')\n});\n\n\nconst SignUp = () => {\n\n  useTitle(\"SWOB Sign Up\");\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [stage, setStage] = useState(0);\n  const [code, setCode] = useState();\n  const [toggle, setToggle] = useState(false);\n  const [toggle2, setToggle2] = useState(false);\n\n  const { register, control, handleSubmit, watch, formState: { errors } } = useForm({\n    resolver: yupResolver(SignUpSchema)\n  });\n\n  const handleSignUp = (data) => {\n\n    let splitNumber = parsePhoneNumber(data.phone_number);\n    data.phone_number = splitNumber.nationalNumber;\n    data.country_code = \"+\" + splitNumber.countryCallingCode;\n\n    setLoading(true);\n\n    registerUser(data)\n      .then(response => {\n        if (response.status === 200) {\n          setToken(response.data);\n          toaster.success(`A verification code has been sent to ${data.country_code + data.phone_number}`, {\n            description: \"Please check and enter it to verify your account\"\n          });\n\n          setStage(2);\n          setLoading(false);\n        }\n      })\n      .catch(error => {\n        if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          switch (error.response.status) {\n            case 400:\n              toaster.danger(\"An error occured\", {\n                description: \"Please try again\"\n              });\n              break;\n\n            case 409:\n              toaster.danger(\"An error occured\", {\n                description: \"An account with this number already exists.Please Log In instead\"\n              });\n              break;\n\n            case 500:\n              toaster.danger(\"An error occured\", {\n                description: \" We are working to resolve it. Please try again\"\n              });\n              break;\n\n            default:\n              toaster.danger(\"Something went wrong\", {\n                description: \"Please try again\"\n              });\n          }\n          setLoading(false);\n\n        } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          toaster.danger(\"Network error\", {\n            description: \"Please check your network and try again\"\n          });\n          setLoading(false);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          toaster.danger(\"Network error\", {\n            description: \"Please check your network and try again\"\n          });\n          setLoading(false);\n        }\n      });\n  }\n\n  const handleCodeVerification = (evt) => {\n    evt.preventDefault();\n\n    setLoading(true);\n\n    const session = getToken();\n\n    verifyCode(code, session.session_id, session.svid)\n      .then(response => {\n        if (response.status === 200) {\n\n          toaster.success(`Success, Your account has been created`, {\n            description: \"You will be redirected to login soon\"\n          });\n\n          //clear the session tokens from localstorage\n          removeToken();\n          setTimeout(() => {\n            setLoading(false);\n            history.push(\"/login\")\n          }, 1000);\n        }\n      })\n      .catch(error => {\n        if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          switch (error.response.status) {\n            case 400:\n              toaster.danger(\"An error occured\", {\n                description: \"Its not your its Us. Please try again\"\n              });\n              break;\n\n            case 401:\n              toaster.danger(\"Invalid code provided\", {\n                description: \"please try again\"\n              });\n              break;\n\n            case 403:\n              toaster.notify(\"Account already verified\", {\n                description: \"Please login\"\n              });\n              history.push(\"/login\");\n              break;\n\n            case 409:\n              toaster.danger(\"An error occured\", {\n                description: \"An account with this number already exists.Please Log In instead\"\n              });\n              break;\n\n            case 500:\n              toaster.danger(\"An error occured\", {\n                description: \"Its not you its Us. We are working to resolve it. Please try again\"\n              });\n              break;\n\n            default:\n              toaster.danger(\"Something went wrong\", {\n                description: \"Please try again\"\n              });\n          }\n          setLoading(false);\n\n        } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          toaster.danger(\"Network error\", {\n            description: \"Please check your network and try again\"\n          });\n          setLoading(false);\n        } else {\n          // Something happened in setting up the request and triggered an Error\n          toaster.danger(\"Network error\", {\n            description: \"Please check your network and try again\"\n          });\n          setLoading(false);\n        }\n      });\n  }\n\n\n  if (loading) return <AnimateLoader />\n\n  if (stage === 2) {\n\n    return (\n      <PageAnimationWrapper>\n        <div tw=\"grid place-items-center h-screen\">\n          <div tw=\" h-56 lg:w-1/3 mx-auto\">\n            <Heading tw=\"text-gray-700 text-center\">Enter verification code</Heading>\n\n            <FormContainer>\n              <Form onSubmit={(evt) => handleCodeVerification(evt)}>\n                <FormGroup>\n                  <Input\n                    tw=\"p-3\"\n                    type=\"number\"\n                    name=\"code\"\n                    min={0}\n                    required\n                    placeholder=\"2FA CODE\"\n                    onChange={(evt) => setCode(evt.target.value)}\n                  />\n                </FormGroup>\n\n                <VerifyButton type=\"submit\" >\n                  verify\n                </VerifyButton>\n              </Form>\n            </FormContainer>\n          </div>\n\n        </div>\n      </PageAnimationWrapper>\n    )\n  }\n\n  return (\n    <PageAnimationWrapper>\n      <Container>\n        <Content>\n          <MainContainer>\n            <LogoImage src={logo} />\n            <MainContent>\n              <Heading>Sign Up</Heading>\n              <FormContainer>\n                <Form onSubmit={handleSubmit(handleSignUp)}>\n\n                  <FormGroup>\n                    <Label>User Name</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"username\"\n                      placeholder=\"Enter your username\"\n                      {...register(\"username\")}\n                    />\n                    {errors.username && <ErrorMessage>{errors.username.message}</ErrorMessage>}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Phone Number</Label>\n                    <Controller\n                      control={control}\n                      name=\"phone_number\"\n                      render={({ field: { value, onChange } }) => (\n                        <PhoneNumberInput\n                          flags={flags}\n                          international\n                          countryCallingCodeEditable={false}\n                          placeholder=\"Enter your phone number\"\n                          defaultCountry=\"CM\"\n                          value={value}\n                          type=\"tel\"\n                          onChange={onChange}\n                        />\n                      )}\n                    />\n                    {errors.phone_number && <ErrorMessage>{errors.phone_number.message}</ErrorMessage>}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Password</Label>\n                    <div tw=\"relative\">\n                      <Input\n                        tw=\"mb-2\"\n                        type={toggle ? \"text\" : \"password\"}\n                        placeholder=\"Password\"\n                        {...register(\"password\")}\n                      />\n                      <ToggleButton\n                        toggleFunc={setToggle}\n                        value={toggle}\n                      />\n                    </div>\n                    {errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n                    <PasswordStrengthBar password={watch('password')} />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Confirm Password</Label>\n                    <div tw=\"relative\">\n                      <Input\n                        tw=\"mb-2\"\n                        type={toggle2 ? \"text\" : \"password\"}\n                        placeholder=\"retype password\"\n                        {...register(\"confirmPassword\")}\n                      />\n                      <ToggleButton\n                        toggleFunc={setToggle2}\n                        value={toggle2}\n                      />\n                    </div>\n                    {errors.confirmPassword && <ErrorMessage>{errors.confirmPassword.message}</ErrorMessage>}\n                    <PasswordStrengthBar password={watch(\"confirmPassword\")} />\n                  </FormGroup>\n\n                  <FormGroup tw=\"inline-flex\">\n                    <Controller\n                      control={control}\n                      name=\"acceptTerms\"\n                      render={({ field: { value, onChange } }) => (\n                        <CheckBox type=\"checkbox\"\n                          value={value}\n                          onChange={onChange}\n                        />\n                      )}\n                    />\n                    <p tw=\"text-sm mb-4 font-light text-gray-600\">\n                      <span>I agree to abide by SMSWithoutborders &nbsp;</span>\n                      <a\n                        href=\"https://smswithoutborders.com/privacy-policy\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        tw=\"border-gray-500 text-primary-900 no-underline\">\n                        privacy policy\n                      </a>\n                    </p>\n                  </FormGroup>\n\n                  <SubmitButton\n                    type=\"submit\"\n                    appearance=\"primary\"\n                    height={40}\n                    iconBefore={loading ? null : FiUserPlus}\n                    isLoading={loading}\n                    disabled={!watch(\"acceptTerms\")}\n                  >\n                    <span className=\"text\">{loading ? \"Registering\" : \"Sign Up\"}</span>\n                  </SubmitButton>\n                </Form>\n\n                <p tw=\"my-8 text-sm text-gray-600 text-center\">\n                  Already have an account?{\" \"}\n                  <Link to=\"/login\" tw=\"text-primary-900\">\n                    Sign In\n                  </Link>\n                </p>\n\n              </FormContainer>\n            </MainContent>\n          </MainContainer>\n          <IllustrationContainer>\n            {/* <IllustrationImage imageSrc={illustration} /> */}\n            <IllustrationImage imageSrc=\"https://source.unsplash.com/1600x900/?humanitarian,revolution,research,books,STEM,science\" />\n          </IllustrationContainer>\n        </Content>\n      </Container>\n    </PageAnimationWrapper>\n  )\n};\n\nexport default SignUp;","export default __webpack_public_path__ + \"static/media/phone.bd0090f7.png\";","export default __webpack_public_path__ + \"static/media/swobflow.7562c134.gif\";","export default __webpack_public_path__ + \"static/media/logo-icon-light.671fbfc2.png\";","import React, { useState } from \"react\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport logo from \"images/logo-icon-light.png\";\nimport swobLogo from \"images/logo.png\";\nimport { Avatar, LogOutIcon, Dialog, SideSheet } from \"evergreen-ui\";\nimport { FiMenu, FiInfo, FiSettings, FiUser, FiExternalLink } from \"react-icons/fi\";\nimport { IoWalletOutline } from \"react-icons/io5\";\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useAppContext } from \"App\";\n\nconst MainHeader = tw.header`flex justify-between items-center bg-white shadow-lg`;\nconst NavContainer = tw.div`block lg:inline-flex`;\nconst NavButton = tw.button`h-16 items-center transition duration-300 hocus:bg-primary-900 hocus:outline-none hocus:text-white text-gray-900 font-medium  px-6 py-3 no-underline appearance-none`;\nconst NavLink = tw(Link)`w-full lg:w-max inline-flex h-16 transition duration-300 hocus:bg-primary-900 hocus:outline-none hocus:text-white text-gray-900 font-medium  px-6 py-3 no-underline items-center hocus:no-underline appearance-none`;\nconst ExtLink = tw.a`w-full lg:w-max inline-flex h-16 transition duration-300 hocus:bg-primary-300 hocus:outline-none text-gray-900 font-medium hocus:font-bold px-6 py-3 no-underline items-center hocus:no-underline appearance-none`;\nconst StartedExtLink = tw(ExtLink)`text-primary-900 bg-primary-300 font-bold`;\nconst LogoLink = styled(NavLink)`\n  ${tw`inline-flex items-center ml-0! hocus:bg-white hocus:text-gray-900 font-bold text-xl`};\n  img {\n    ${tw`w-8 h-8 mr-3`}\n  }\n`;\nconst UserActions = tw.div`flex flex-col lg:flex-row items-center`;\nconst UserActionsButton = tw(NavButton)`w-full lg:w-max flex flex-row items-center px-6 py-3 md:px-4 `;\nconst MobileNav = tw.nav`lg:hidden flex flex-1 items-center justify-between`;\nconst NavToggle = tw(NavButton)`lg:hidden focus:outline-none transition duration-300 hocus:bg-white hocus:text-gray-900`;\nconst DesktopNav = tw.nav`hidden lg:flex flex-1 justify-between items-center bg-white`;\nconst AboutLogo = tw.img`w-60`;\nconst AboutContainer = tw.div`flex flex-wrap items-center flex-col md:flex-row`;\nconst AboutDetails = tw.div`text-gray-900`;\n\n\n\nconst Navbar = () => {\n    const { path } = useRouteMatch();\n    const [isAboutOpen, setIsAboutOpen] = useState(false);\n    const [open, setOpen] = useState(false);\n    const { state, handleLogOut } = useAppContext();\n    const { userProfile } = state;\n\n\n    const defaultLinks = [\n        <React.Fragment key=\"nav\">\n            <NavContainer key={1}>\n                <StartedExtLink onClick={() => setOpen(false)} key=\"Get Started\" href=\"https://smswithoutborders.github.io/getting_started.html\" target=\"_blank\"><FiExternalLink size={20} /> &nbsp; Get Started</StartedExtLink>\n                <NavLink onClick={() => setOpen(false)} key=\"Profile\" to={`${path}/profile`}><FiUser size={20} /> &nbsp; Profile</NavLink>\n                <NavLink onClick={() => setOpen(false)} key=\"Wallet\" to={`${path}/wallet`}><IoWalletOutline size={20} /> &nbsp; Wallet(Store Access)</NavLink>\n                <NavLink onClick={() => setOpen(false)} key=\"Settings\" to={`${path}/settings`}><FiSettings size={20} /> &nbsp; Settings</NavLink>\n            </NavContainer>\n        </React.Fragment>\n    ];\n\n    const actionLinks = (\n        <UserActions key={2}>\n            <UserActionsButton onClick={() => setIsAboutOpen(!isAboutOpen)}>\n                <FiInfo size={20} />\n            </UserActionsButton>\n            {userProfile ? (\n                <UserActionsButton onClick={() => setOpen(false)}>\n                    <Avatar name={userProfile?.name} size={34} />\n                </UserActionsButton>\n            ) : (null)\n            }\n            <UserActionsButton onClick={() => handleLogOut()}>\n                <LogOutIcon /> &nbsp; Logout\n            </UserActionsButton>\n        </UserActions>\n    );\n\n    const mobileActionLinks = (\n        <UserActions key={2}>\n            <UserActionsButton onClick={() => { setOpen(false); setIsAboutOpen(!isAboutOpen) }}>\n                <FiInfo size={20} /> &nbsp; About\n            </UserActionsButton>\n            {userProfile ? (\n                <UserActionsButton tw=\"px-5 md:px-3\"\n                    onClick={() => setOpen(false)}\n                >\n                    <Avatar name={userProfile?.name} size={30} /> &nbsp; {userProfile?.name}\n                </UserActionsButton>\n            ) : (null)\n            }\n            <UserActionsButton onClick={() => handleLogOut()}>\n                <LogOutIcon /> &nbsp; Logout\n            </UserActionsButton>\n        </UserActions>\n    );\n\n\n    const defaultLogoLink = (\n        <LogoLink to=\"/dashboard\">\n            <img src={logo} alt=\"logo\" />\n            <span>SMSwithoutborders</span>\n        </LogoLink>\n    );\n\n    return (\n        <>\n            <MainHeader>\n                <DesktopNav>\n                    {defaultLogoLink}\n                    {defaultLinks}\n                    {actionLinks}\n                </DesktopNav>\n                <MobileNav>\n                    {defaultLogoLink}\n                    <NavToggle onClick={() => setOpen(!open)}>\n                        <FiMenu size={24} />\n                    </NavToggle>\n                </MobileNav>\n            </MainHeader>\n            <SideSheet\n                width={300}\n                isShown={open}\n                onCloseComplete={() => setOpen(false)}\n            >\n                {defaultLinks}\n                {mobileActionLinks}\n            </SideSheet>\n\n            <Dialog\n                isShown={isAboutOpen}\n                title=\"About\"\n                onCloseComplete={() => setIsAboutOpen(false)}\n                hasFooter={false}\n            >\n                <AboutContainer>\n                    <AboutLogo src={swobLogo} alt=\"SMSwithoutborders logo\" />\n                    <AboutDetails>\n                        <h3 tw=\"text-xl font-bold mb-2\">SMSwithoutBorders</h3>\n                        <p tw=\"text-base\">Version number</p>\n                        <p tw=\"text-base\">1.0.0</p>\n                    </AboutDetails>\n                </AboutContainer>\n            </Dialog>\n        </>\n    );\n};\n\n\nexport default Navbar;","import React, { useState } from \"react\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport logo from \"images/logo-icon-light.png\";\nimport { FiMenu, FiLogIn, FiUserPlus } from \"react-icons/fi\";\nimport { Link } from 'react-router-dom';\nimport { SideSheet } from \"evergreen-ui\";\n\nconst MainHeader = tw.header`flex justify-between items-center bg-white shadow-lg`;\nconst NavContainer = tw.div`block lg:inline-flex`;\nconst NavButton = tw.button`h-16 items-center transition duration-300 hocus:bg-primary-300 hocus:outline-none text-gray-900 font-medium  px-6 py-3 no-underline appearance-none`;\nconst NavLink = tw(Link)`w-full lg:w-max inline-flex h-16 transition duration-300 hocus:bg-primary-300 hocus:outline-none hocus:text-primary-900 text-gray-900 font-medium hocus:font-bold px-6 py-3 no-underline items-center hocus:no-underline appearance-none`;\nconst ExtLink = tw.a`w-full lg:w-max inline-flex h-16 transition duration-300 hocus:bg-primary-300 hocus:outline-none text-gray-900 font-medium hocus:font-bold px-6 py-3 no-underline items-center hocus:no-underline appearance-none`;\nconst StartedExtLink = tw(ExtLink)`text-primary-900 bg-primary-300 font-bold`;\nconst LogoLink = styled(NavLink)`\n  ${tw`inline-flex items-center ml-0! hocus:bg-white hocus:text-gray-900 font-bold text-xl`};\n  img {\n    ${tw`w-8 h-8 mr-3`}\n  }\n`;\n\nconst SignUpLink = tw(NavLink)`bg-primary-900 text-white font-bold`;\nconst LogInLink = tw(NavLink)`text-primary-900 font-bold`;\nconst UserActions = tw.div`flex flex-col md:flex-row items-center`;\nconst MobileNav = tw.nav`lg:hidden flex flex-1 items-center justify-between`;\nconst NavToggle = tw(NavButton)`lg:hidden focus:outline-none transition duration-300 hocus:bg-white hocus:text-gray-900`;\nconst DesktopNav = tw.nav`hidden lg:flex flex-1 justify-between items-center bg-white`;\n\nconst MainNavbar = () => {\n\n    const [open, setOpen] = useState(false);\n\n    const defaultLinks = (\n        <React.Fragment key=\"nav\">\n            <NavContainer key={1}>\n                <StartedExtLink onClick={() => setOpen(false)} key=\"Get Started\" href=\"https://smswithoutborders.github.io/getting_started.html\" target=\"_blank\">Get Started</StartedExtLink>\n                <NavLink onClick={() => setOpen(false)} key=\"privacy-policy\" to=\"/privacy-policy\">Privacy Policy</NavLink>\n                <ExtLink onClick={() => setOpen(false)} key=\"Github\" href=\"https://github.com/orgs/smswithoutborders/\" target=\"_blank\">Github</ExtLink>\n                <ExtLink onClick={() => setOpen(false)} key=\"Blog\" href=\"https://smswithoutborders.github.io\" target=\"_blank\">Blog</ExtLink>\n                <NavLink onClick={() => setOpen(false)} key=\"contact-us\" to=\"/contact-us\">Contact Us</NavLink>\n            </NavContainer>\n        </React.Fragment>\n    );\n\n    const actionLinks = (\n        <UserActions key={2}>\n            <LogInLink key=\"login\" to=\"/login\">\n                <FiLogIn size={20} /> &nbsp; Log In\n            </LogInLink>\n            <SignUpLink key=\"sign-up\" to=\"/sign-up\">\n                <FiUserPlus size={20} /> &nbsp; Sign Up\n            </SignUpLink>\n        </UserActions>\n    );\n\n    const defaultLogoLink = (\n        <LogoLink to=\"/\">\n            <img src={logo} alt=\"logo\" />\n            <span>SMSwithoutborders</span>\n        </LogoLink>\n    );\n\n    return (\n        <>\n            <MainHeader>\n                <DesktopNav>\n                    {defaultLogoLink}\n                    {defaultLinks}\n                    {actionLinks}\n                </DesktopNav>\n                <MobileNav>\n                    {defaultLogoLink}\n                    <NavToggle onClick={() => setOpen(!open)}>\n                        <FiMenu size={24} />\n                    </NavToggle>\n                </MobileNav>\n            </MainHeader>\n\n\n            <SideSheet\n                width={300}\n                isShown={open}\n                onCloseComplete={() => setOpen(false)}\n            >\n                {defaultLinks}\n                {actionLinks}\n            </SideSheet>\n        </>\n    );\n};\n\n\n\nexport default MainNavbar;","import React from 'react';\nimport tw from \"twin.macro\";\nimport Logo from \"images/logo-icon-light.png\";\nimport { Link } from \"react-router-dom\";\nimport { FiMail, FiMessageSquare, FiLink2, FiGlobe } from \"react-icons/fi\";\nimport { GoMarkGithub } from \"react-icons/go\";\n\nconst Container = tw.footer`flex flex-col lg:flex-row md:justify-between bg-gray-800 text-white py-8 px-2 md:p-8`;\nconst LogoIcon = tw.img`w-12 h-12 text-white p-2 rounded-full`;\nconst FooterLink = tw.p`text-gray-100 pl-14`;\nconst FooterNavLink = tw(Link)`font-medium inline-flex items-center text-gray-100 hocus:no-underline hocus:text-gray-100`;\nconst DescLink = tw.a`inline-flex items-center text-base text-gray-100 cursor-pointer mb-2 md:mb-4 hocus:no-underline hocus:text-primary-700`;\nconst NavContainer = tw.div`flex flex-col p-4 items-start`;\n\nconst Footer = () => {\n    return (\n        <>\n            <Container>\n                <NavContainer tw=\"p-0 mb-4 md:mb-0\">\n                    <FooterNavLink to=\"/\">\n                        <LogoIcon src={Logo} alt=\"SMSwithoutborders\" />\n                        <span tw=\"ml-2 text-xl font-bold\">SMSwithoutborders</span>\n                    </FooterNavLink>\n\n                    <FooterLink>\n                        &copy; {new Date().getFullYear()} Powered by <DescLink tw=\"text-sm\" href=\"https://afkanerd.io\" target=\"_blank\" rel=\"noreferrer\">Afkanerd</DescLink>\n                    </FooterLink>\n\n                </NavContainer>\n\n                <NavContainer>\n                    <DescLink href=\"https://smswithoutborders.github.io\" target=\"_blank\" rel=\"noreferrer\"><FiGlobe size={20} /> &nbsp; SWOB Blog</DescLink>\n                    <FooterNavLink tw=\"mb-2 md:mb-4 hocus:text-primary-700\" to=\"/privacy-policy\"><FiLink2 size={20} /> &nbsp; Privacy Policy</FooterNavLink>\n                    <DescLink href=\"mailto:developers@smswithoutborders.com\" target=\"_blank\" rel=\"noreferrer\"><FiMail size={20} /> &nbsp; developers@smswithoutborders.com</DescLink>\n                </NavContainer>\n\n                <NavContainer>\n                    <DescLink><FiMessageSquare size={20} /> &nbsp; IRC: freenode/#afkanerd</DescLink>\n                    <DescLink href=\"https://github.com/smswithoutborders\" target=\"_blank\" rel=\"noreferrer\"><GoMarkGithub size={20} /> &nbsp; @smswithoutborders</DescLink>\n                </NavContainer>\n\n            </Container>\n        </>\n    )\n}\n\nexport default Footer;","import styled from \"styled-components\";\nimport tw from \"twin.macro\";\nimport { Link } from \"react-router-dom\";\n\nexport const HeadingRow = tw.div`flex`;\nexport const Heading = tw.h2`text-3xl sm:text-5xl font-bold tracking-wide leading-tight mb-5`;\nexport const Description = tw.p`text-base lg:text-lg leading-relaxed tracking-wide text-gray-700 mt-8`;\nexport const DonateButton = tw(Link)`w-full mt-8 px-8 py-3 font-bold rounded bg-primary-500 text-gray-100 hocus:bg-primary-700 hocus:text-gray-200 focus:shadow-outline focus:outline-none transition duration-300 block text-center`;\nexport const Text = styled.div`\n  ${tw`text-lg  text-gray-700`}\n  p {\n    ${tw`mt-2 leading-loose`}\n  } \n  h1 {\n    ${tw`text-3xl font-bold mt-10 `}\n  }\n  h2 {\n    ${tw`text-2xl font-bold mt-8`}\n  }\n  h3 {\n    ${tw`text-xl font-bold mt-6`}\n  }\n  strong {\n    ${tw``}\n  }\n  ul {\n    ${tw`list-disc list-inside`}\n    li {\n      ${tw`ml-2 mb-3`}\n      p {\n        ${tw`mt-0 inline leading-normal`}\n      }\n    }\n  }\n  dt {\n    ${tw`font-bold mb-2`}\n  }\n  dd {\n    margin: 0;\n    padding: 0 0 1.5em 0;\n  }\n`;","import React from \"react\";\nimport tw from \"twin.macro\";\nimport phone from \"images/phone.png\";\nimport swobflow from \"images/swobflow.gif\";\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper\";\n\nimport { MainNavbar, Footer } from \"components\";\nimport { FiUserPlus, FiLogIn, FiDownload, FiShield, FiSave } from \"react-icons/fi\";\nimport { DiOpensource } from \"react-icons/di\";\nimport { IoAccessibility, IoLogoGooglePlaystore as PlayStore } from \"react-icons/io5\";\nimport { GiCheckboxTree } from \"react-icons/gi\";\n\nconst Container = tw.section`px-8 mx-auto text-gray-900`;\nconst TextContainer = tw.div`flex-grow sm:text-left text-center mt-6 sm:mt-0`;\nconst SectionContainer = tw.section`mx-auto flex px-8 md:px-8 py-12 md:flex-row flex-col items-center bg-primary-600`;\nconst ImageContainer = tw.div`md:w-1/2 mb-10 md:mb-0`;\nconst DetailsContainer = tw.div`md:w-1/2 p-2 flex flex-col md:-ml-20 mb-12 items-start order-first md:order-last`;\nconst Heading = tw.h1`font-black text-4xl sm:text-5xl mb-8  text-gray-900`;\nconst SubHeading = tw.h2`text-gray-900 text-base md:text-xl font-bold mb-2 leading-relaxed`;\nconst Description = tw.h3`text-lg leading-relaxed text-gray-800 mb-5`;\nconst Image = tw.img`block mx-auto shadow-lg rounded-2xl transform md:-rotate-25  md:mt-8 md:-mb-24 shadow-2xl`;\nconst Button = tw.a`inline-flex items-center transition duration-300 bg-white hocus:outline-none text-primary-900 font-bold px-6 py-3  no-underline items-center\nappearance-none shadow hocus:shadow-2xl rounded-3xl hocus:no-underline`;\nconst DescItem = tw.div`flex items-center mx-auto pb-10 border-gray-200 sm:flex-row flex-col`;\nconst IconBlock = tw.div`sm:w-32 sm:h-32 h-24 w-24 inline-flex items-center justify-center rounded-full bg-white shadow-xl text-primary-900 flex-shrink-0`;\nconst Text = tw.p`leading-relaxed text-base`;\nconst Column = tw.div`w-full`;\nconst Row = tw.div`w-full`;\n\nconst HomePage = () => {\n\n    return (\n        <>\n            <PageAnimationWrapper tw=\"h-screen\">\n                <MainNavbar />\n                <SectionContainer>\n                    <ImageContainer>\n                        <Image\n                            src={phone}\n                            alt=\"SMSWithoutBorders Logo\"\n                            height={250}\n                            width={250}\n                        />\n                    </ImageContainer>\n                    <DetailsContainer>\n                        <Heading>Stay Productive</Heading>\n\n                        <Description>In this age of communication, keep in touch with your contacts across the internet without\n                            access to an active internet connection. Store your access to your favourite communications\n                            platforms while online, use them while offline.</Description>\n                        <Button href=\"https://play.google.com/store/apps/details?id=com.afkanerd.sw0b\" target=\"_blank\">\n                            <PlayStore size={24} /> &nbsp; Get SWOB\n                        </Button>\n                    </DetailsContainer>\n                </SectionContainer>\n\n                <Container>\n                    <Row tw=\"pt-20 pb-12\">\n                        <Heading tw=\"text-center\">How it works</Heading>\n                        <SubHeading tw=\"text-center font-normal\">Using SWOB is as easy as authenticating your credentials</SubHeading>\n                    </Row>\n\n                    <Row tw=\"flex flex-col md:flex-row mb-16\">\n                        <Column tw=\"md:w-1/2 md:pl-20\">\n                            <DescItem>\n                                <IconBlock tw=\"sm:mr-10\">\n                                    <FiUserPlus size={48} />\n                                </IconBlock>\n                                <TextContainer>\n                                    <SubHeading>Sign Up </SubHeading>\n                                    <Text>Signup for a SWOB account</Text>\n                                </TextContainer>\n                            </DescItem>\n                            <DescItem>\n\n                                <IconBlock tw=\"sm:mr-10\">\n                                    <FiSave size={48} />\n                                </IconBlock>\n                                <TextContainer>\n                                    <SubHeading>Goto Wallet, </SubHeading>\n                                    <Text>select and store the platform for which you want access for later offline\n                                        uses</Text>\n                                </TextContainer>\n                            </DescItem>\n                            <DescItem>\n                                <IconBlock tw=\"sm:mr-10\">\n                                    <FiDownload size={48} />\n                                </IconBlock>\n                                <TextContainer>\n                                    <SubHeading>Get the SWOB app from the Playstore</SubHeading>\n                                    <Text>Goto your SWOB profile online and click on Sync. Use your SWOB app to scan your QR code</Text>\n                                </TextContainer>\n                            </DescItem>\n                            <DescItem>\n                                <IconBlock tw=\"sm:mr-10\">\n                                    <FiLogIn size={48} />\n                                </IconBlock>\n                                <TextContainer>\n                                    <SubHeading>Use App</SubHeading>\n                                    <Text>Enter your password in the app and begin transmitting messages while offline using SMS messages</Text>\n                                </TextContainer>\n                            </DescItem>\n                        </Column>\n\n                        <Column tw=\"md:w-1/2 grid place-items-center \">\n                            <img\n                                src={swobflow}\n                                alt=\"SMSWithoutBorders Logo\"\n                                width={310}\n                                height={600}\n                            />\n                        </Column>\n                    </Row>\n                </Container>\n\n                <Container tw=\"bg-gray-100\">\n                    <div tw=\"py-16\">\n                        <Heading tw=\"text-center\">Why use SWOB?</Heading>\n                    </div>\n                    <Column tw=\"lg:w-3/5  mx-auto\">\n                        <DescItem>\n                            <IconBlock tw=\"sm:mr-10\">\n                                <IoAccessibility size={48} />\n                            </IconBlock>\n                            <TextContainer>\n                                <SubHeading>Accessibility </SubHeading>\n                                <Text>SWOB’s mobile app allows users to have offline communication wherever they\n                                    are. With as simple as having an SMS message smartphone you can maintain\n                                    communications with your online platforms</Text>\n                            </TextContainer>\n                        </DescItem>\n                        <DescItem>\n                            <TextContainer>\n                                <SubHeading>Security</SubHeading>\n                                <Text>SWOB transmits messages in securely encrypted formats. This secures every\n                                    communication from being accessed by intermediate parties while in transit.</Text>\n                            </TextContainer>\n                            <IconBlock tw=\"sm:ml-10 sm:order-none order-first  \">\n                                <FiShield size={48} />\n                            </IconBlock>\n                        </DescItem>\n                        <DescItem>\n                            <IconBlock tw=\"sm:mr-10\">\n                                <DiOpensource size={64} />\n                            </IconBlock>\n                            <TextContainer>\n                                <SubHeading>Open source</SubHeading>\n                                <Text>Every component of SWOB is open sourced! From the mobile app to the routing\n                                    mechanisms we use to get your SMS messages to reach your intended\n                                    platforms.</Text>\n                            </TextContainer>\n                        </DescItem>\n                        <DescItem>\n                            <TextContainer>\n                                <SubHeading>Decentralized</SubHeading>\n                                <Text>SWOB is built to work in decentralized models. Anyone can host a SWOB server.\n                                    It’s as easy as understanding how to use it</Text>\n                            </TextContainer>\n                            <IconBlock tw=\"sm:ml-10 sm:order-none order-first  \">\n                                <GiCheckboxTree size={48} />\n                            </IconBlock>\n                        </DescItem>\n                    </Column>\n                </Container>\n                <Footer />\n            </PageAnimationWrapper>\n        </>\n    );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nlet AUTH_URL = process.env.REACT_APP_API_URL;\naxios.defaults.baseURL = AUTH_URL;\n\nexport const getProfileInfo = (id, token) => {\n    return axios.post(\"/users/profiles/info\", {\n        id: id,\n        auth_key: token\n    }).then(response => response)\n}\n\nexport const changePassword = (id, token, password, new_password) => {\n    return axios.post(\"/users/password/new\", {\n        id: id,\n        auth_key: token,\n        password: password,\n        new_password: new_password\n    }).then(response => response)\n}\n\nexport const addPhoneNumber = (id, token, country_code, phone_number) => {\n    return axios.post(\"/users/profiles/info/new_number\", {\n        id: id,\n        auth_key: token,\n        country_code: country_code,\n        new_phone_number: phone_number\n    }).then(response => response)\n}\n\nexport const verifyPhoneNumber = (code, session_id, svid) => {\n    return axios.post(\"/users/profiles/info/new_number/2fa\", {\n        code: code,\n        session_id: session_id,\n        svid: svid\n    }).then(response => response)\n}\n\nexport const deleteAccount = (id, token, password) => {\n    return axios.delete(\"/users/profiles/delete\", {\n        data: {\n            id: id,\n            auth_key: token,\n            password: password\n        }\n    }).then(response => response)\n}\n","import React, { useState, useEffect } from 'react';\nimport tw from \"twin.macro\"\nimport axios from \"axios\";\nimport QRCode from 'qrcode.react';\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper\";\nimport AnimateLoader from 'components/Loaders/AnimateLoader';\nimport useTitle from \"helpers/useTitle\";\nimport { Avatar, toaster, Spinner, Pane } from 'evergreen-ui';\nimport { IoMdSync, IoMdArrowBack } from \"react-icons/io\";\nimport { getProfileInfo } from \"services/profile.service\";\nimport { getLocalState } from \"services/storage.service\";\nimport { useAppContext } from 'App';\n\n\nconst SectionContainer = tw.section`p-8 mx-auto flex flex-col lg:flex-wrap content-center md:flex-row bg-gray-100 md:h-screen`;\nconst ImageContainer = tw.div`md:w-1/2 mb-4 md:mb-0`;\nconst DetailsContainer = tw.div`md:w-1/2 flex flex-col text-center md:text-left p-4 lg:-ml-16`;\nconst Image = tw(Avatar)`block mx-auto md:ml-auto `;\nconst Heading = tw.h1`font-bold sm:text-4xl text-2xl mb-4 font-bold text-gray-900`;\nconst ProfileName = tw.span`font-light`;\nconst Description = tw.h3`text-lg font-bold leading-relaxed text-gray-800 mb-1`;\nconst QRContainer = tw(QRCode)`block mx-auto border shadow-lg rounded-xl p-4 bg-white`;\nconst Meta = tw.p`font-light leading-relaxed text-gray-700 mb-4`;\nconst SyncButton = tw.button`inline-flex items-center text-center rounded-md text-white p-4 mb-4 md:mb-0 bg-primary-900 font-bold`;\nconst ButtonGroup = tw.div`flex flex-col md:flex-row items-center mt-4`;\n\nconst Profile = () => {\n    useTitle(\"Your Profile\")\n    const { dispatch, state } = useAppContext();\n    const { userProfile, token, id } = state;\n    const [loading, setLoading] = useState(false);\n    const [syncState, setSyncState] = useState({\n        ws: null,\n        open: false,\n        connected: false,\n        loading: false,\n        paused: false,\n        acked: false,\n        qrLink: \"\"\n    });\n\n\n    useEffect(() => {\n        if (!Object.keys(userProfile).length > 0) {\n            setLoading(true);\n            getProfileInfo(id, token)\n                .then(response => {\n                    dispatch({ type: \"SETUSERPROFILE\", payload: response.data });\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        toaster.danger(\"Request Error\", {\n                            description: \"Sorry we could not locate your profile. Please check your network connection and try again\"\n                        });\n\n                    } else if (error.request) {\n                        toaster.danger(\"Network Error\", {\n                            description: \"We could not fetch your profile. Please check your network and reload this page\"\n                        });\n                    } else {\n                        toaster.danger(\"Profile Error\", {\n                            description: \"An internal error occured. Please log out and login again\"\n                        });\n                    }\n                    setLoading(false);\n                });\n        }\n    }, [userProfile, token, id, dispatch]);\n\n    const handleSync = () => {\n        setSyncState({ open: true, loading: true });\n\n        let ROUTER_URL = process.env.REACT_APP_ROUTER_URL;\n\n        let authObj = getLocalState();\n        let AUTH_KEY = authObj?.token;\n        let AUTH_ID = authObj?.id;\n\n        axios.post(ROUTER_URL + \"/sync/sessions\", {\n            auth_key: AUTH_KEY,\n            id: AUTH_ID\n        }).then(response => {\n\n            let ws = new WebSocket(response.data.url);\n\n            ws.onopen = () => {\n                //set ws reference in state\n                setSyncState(syncState => {\n                    return { ...syncState, ws: ws };\n                });\n            }\n\n            ws.onmessage = evt => {\n                // listen to data sent from the websocket server\n                // eslint-disable-next-line eqeqeq\n                if (evt.data == \"200- acked\") {\n                    setSyncState(syncState => {\n                        return { ...syncState, acked: true, open: false }\n                    });\n                    toaster.success(\"Sync complete\");\n                    // eslint-disable-next-line eqeqeq\n                } else if (evt.data == \"201- paused\") {\n                    setSyncState(syncState => {\n                        return { ...syncState, paused: true, connected: false };\n                    });\n                } else {\n                    setSyncState(syncState => {\n                        return { ...syncState, loading: false, connected: true, qrLink: evt.data };\n                    });\n                }\n            }\n\n            ws.onclose = () => {\n                setSyncState(false);\n            }\n\n            ws.onerror = (err) => {\n                toaster.danger(\"An error occured\", {\n                    description: \"Please sync again\"\n                });\n            }\n        }).catch((error) => {\n            if (error.response) {\n                toaster.danger(\"Request Error\", {\n                    description: \"Sorry we could not sync your profile. Please check your network connection and try again\"\n                });\n\n            } else if (error.request) {\n                toaster.danger(\"Network Error\", {\n                    description: \"We could not sync your profile. Please check your network and try again\"\n                });\n\n            } else {\n                toaster.danger(\"Profile Error\", {\n                    description: \"We could not sync your profile. Please check your network, log out and login again\"\n                });\n            }\n            setSyncState({ open: false });\n        });\n    }\n\n    if (loading) {\n        return (\n            <AnimateLoader />\n        )\n    }\n\n    if (syncState.open) {\n        return (\n            <PageAnimationWrapper>\n                <SectionContainer>\n                    <ImageContainer>\n                        {syncState.connected && (\n                            <QRContainer\n                                value={syncState.qrLink}\n                                size={300}\n                            />\n                        )}\n\n                        {(syncState.loading || syncState.paused) && (\n                            <Pane\n                                display=\"flex\"\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                                height={300}\n                                width={300}\n                                tw=\"bg-white border border-gray-100 shadow-lg rounded-lg p-4 mx-auto\">\n                                <Spinner />\n                            </Pane>\n                        )}\n\n                    </ImageContainer>\n                    <DetailsContainer>\n                        <Heading>Sync Mobile</Heading>\n                        <Description>Please scan the QR code to sync with App</Description>\n                        <Meta>This lets you use the SW/OB secure gateway for all messages</Meta>\n                        <br />\n                        <Description>Status</Description>\n                        <Meta>{syncState.paused ? \"syncing\" : \"pending\"}</Meta>\n                        <br />\n                        <ButtonGroup>\n                            <SyncButton\n                                tw=\"bg-red-900\"\n                                onClick={() => {\n                                    setSyncState(false);\n                                    syncState.ws.close();\n                                    toaster.notify(\"Sync session closed\");\n                                }}\n                            >\n                                <IoMdArrowBack size={24} /> &nbsp; stop sync\n                            </SyncButton>\n                        </ButtonGroup>\n                    </DetailsContainer>\n                </SectionContainer>\n            </PageAnimationWrapper>\n        )\n    }\n\n    return (\n        <PageAnimationWrapper>\n            <SectionContainer>\n                <ImageContainer>\n                    <Image tw=\"hidden md:block\" name={userProfile?.name} size={250} />\n                    <Image tw=\"md:hidden\" name={userProfile?.name} size={180} />\n                </ImageContainer>\n                <DetailsContainer>\n                    <Heading> Welcome, <ProfileName>{userProfile?.name}</ProfileName> </Heading>\n                    <Description>Join Date</Description>\n                    <Meta>{new Date(userProfile?.created).toLocaleString()}</Meta>\n                    <Description>Last Login</Description>\n                    <Meta>{new Date(userProfile?.last_login).toLocaleString()}</Meta>\n                    <ButtonGroup>\n                        <SyncButton onClick={() => handleSync()}>\n                            <IoMdSync size={24} /> &nbsp; sync with app\n                        </SyncButton>\n                    </ButtonGroup>\n                </DetailsContainer>\n            </SectionContainer>\n        </PageAnimationWrapper>\n    );\n};\n\nexport default Profile;\n","import axios from 'axios';\nimport { getLocalState } from \"services/storage.service\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\naxios.defaults.baseURL = API_URL;\n\nlet authObj = getLocalState();\nlet AUTH_KEY = authObj?.token;\nlet AUTH_ID = authObj?.id;\n\nexport const getProviders = (id, token) => {\n    return axios.post(\"/users/providers\", {\n        id: id,\n        auth_key: token\n    }).then(response => response)\n}\n\nexport const getStoredTokens = (provider) => {\n    return axios.post(\"/users/stored_tokens\", {\n        id: AUTH_ID,\n        auth_key: AUTH_KEY,\n        provider: provider\n    }).then(response => response)\n};\n\nexport const getPlatformOauthToken = (id, token, provider, platform) => {\n    return axios.post(\"/users/tokens\", {\n        id: id,\n        auth_key: token,\n        provider: provider,\n        platform: platform\n    }).then(response => response)\n};\n\nexport const revokeToken = (id, token, password, provider, platform) => {\n    return axios.post(\"/users/tokens/revoke\", {\n        id: id,\n        auth_key: token,\n        password: password,\n        provider: provider,\n        platform: platform\n    }).then(response => response)\n}\n\nexport const getGoogleOauthToken = (data) => {\n    return axios.post(\"/oauth2/google/code\", {\n        id: AUTH_ID,\n        auth_key: AUTH_KEY,\n        data: JSON.stringify(data)\n    }).then(response => response)\n}\nexport const savePlatformOauthToken = (id, token, provider, platform, code) => {\n    let authObj = getLocalState();\n    let AUTH_KEY = authObj?.token;\n    let AUTH_ID = authObj?.id;\n    return axios.post(`/${provider}/auth/success`, {\n        id: AUTH_ID,\n        auth_key: AUTH_KEY,\n        provider: provider,\n        platform: platform,\n        code: code\n    }).then(response => response)\n}","import React, { useState, useEffect } from 'react';\nimport tw from \"twin.macro\";\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper\";\nimport AnimateLoader from 'components/Loaders/AnimateLoader';\nimport useTitle from 'helpers/useTitle';\nimport { getProviders, getPlatformOauthToken, savePlatformOauthToken, revokeToken } from 'services/wallet.service';\nimport { Button, toaster, Dialog } from 'evergreen-ui';\nimport { FiSave, FiTrash2 } from \"react-icons/fi\";\nimport { IoWalletOutline } from \"react-icons/io5\";\nimport { Panel, Placeholder } from \"rsuite\";\nimport { ToggleButton } from \"components/misc/Buttons\";\nimport { useAppContext } from 'App';\n\nconst StoreButton = tw(Button)`rounded-md`;\nconst Heading = tw.h1`font-bold text-4xl mb-4 inline-flex items-center`;\nconst Description = tw.p`mb-8 text-base md:text-lg leading-relaxed`;\nconst PlatformTitle = tw.h4`text-lg font-medium`;\nconst PlatformDescription = tw.p`mb-2`;\nconst SubHeading = tw.h3`text-lg font-bold`;\nconst Card = tw.div`h-full`;\nconst Column = tw.div`p-4 md:w-1/2 w-full`;\nconst Row = tw.div`flex flex-wrap -m-4 mt-12`;\nconst Container = tw.div`container px-5 mx-auto py-12 lg:px-16 lg:py-24 text-gray-900 h-screen lg:mb-36`;\nconst StoreContainer = tw.div`flex flex-wrap items-center justify-between`;\nconst Input = tw.input`relative w-full rounded-md py-2 px-3 mb-2 text-gray-700 border border-gray-400 hocus:border-primary-900`;\nconst Label = tw.label`block font-light mb-2`;\nconst Accordion = tw(Panel)`border border-gray-200 shadow-md`;\nconst { Paragraph } = Placeholder;\n\nconst Wallet = () => {\n\n    const { state, dispatch } = useAppContext();\n    const { token, id } = state;\n    const [tokens, setTokens] = useState();\n    const [providers, setProviders] = useState();\n    const [password, setPassword] = useState(\"\");\n    const [isValid, setIsValid] = useState(false);\n    const [toggle, setToggle] = useState(false);\n    const [revokedTokenDetails, setRevokedTokenDetails] = useState(\n        {\n            provider: \"\",\n            platform: \"\"\n        });\n\n    const [alert, setAlert] = useState(\n        {\n            loading: false,\n            platforms: true,\n            modal: false\n        });\n\n    //used to check password length when user revokes token prevents error 400 from BE\n    const validatePassword = () => {\n        if (password.length >= 8) {\n            setIsValid(true);\n        } else {\n            setIsValid(false);\n        }\n    }\n\n    useTitle(\"Wallet (Store Access)\");\n\n    useEffect(() => {\n        getProviders(id, token)\n            .then(response => {\n                let tokens = response.data.user_provider;\n                let providers = response.data.default_provider;\n                if (providers.length) {\n                    setProviders(providers);\n                }\n                if (tokens.length) {\n                    setTokens(tokens);\n                }\n                setAlert({ platforms: false });\n            })\n            .catch((error) => {\n                if (error.response) {\n                    toaster.danger(\"Request Error\", {\n                        description: \"Sorry we could not process your request. Please check your network connection and try again\"\n                    });\n\n                } else if (error.request) {\n                    setAlert({ loading: false });\n                    toaster.danger(\"Network Error\", {\n                        description: \"We could not fetch your tokens. Please check your network and reload this page\"\n                    });\n                } else {\n                    toaster.danger(\"No Tokens\", {\n                        description: \"You haven't stored any tokens. Please add them\"\n                    });\n                }\n                setAlert({ platforms: false });\n            });\n    }, [token, id]);\n\n    const getPlatformToken = (provider, platform) => {\n        setAlert({ loading: true })\n        getPlatformOauthToken(id, token, provider, platform)\n            .then(response => {\n                //set new token\n                dispatch({\n                    type: \"LOGIN\",\n                    payload: {\n                        id: id,\n                        token: response.data.auth_key\n                    }\n                });\n                //open authorization window\n                openSignInWindow(response.data.url);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    /*\n                     * The request was made and the server responded with a\n                     * status code that falls out of the range of 2xx\n                     */\n                    setAlert({ loading: false });\n                    toaster.danger(\"An error occurred\", {\n                        description: \"Please try again\"\n                    })\n\n                } else if (error.request) {\n                    /*\n                     * The request was made but no response was received, `error.request`\n                     * is an instance of XMLHttpRequest in the browser and an instance\n                     * of http.ClientRequest in Node.js\n                     */\n                    console.log(error.request);\n                    setAlert({ loading: false });\n                    toaster.danger(\"Network Error\", {\n                        description: \"Please Check your network connection and try again\"\n                    })\n                } else {\n                    // Something happened in setting up the request and triggered an Error\n                    setAlert({ loading: false });\n                    toaster.danger(\"There are currently no stored Tokens\",)\n                }\n            });\n    };\n\n    const handleRevokeToken = (provider, platform) => {\n        revokeToken(id, token, password, provider, platform)\n            .then(response => {\n                if (response.status === 200) {\n                    setTokens(0);\n                    setAlert({ loading: false });\n                    toaster.success('Token deleted successfully');\n                    setTimeout(() => {\n                        window.location.reload();\n                    }, 1000)\n                }\n            })\n            .catch((error) => {\n                if (error.response) {\n                    /*\n                     * The request was made and the server responded with a\n                     * status code that falls out of the range of 2xx\n                     */\n                    console.log(error.response);\n                    if (error.response.status === 401) {\n                        setAlert({ loading: false });\n                        toaster.danger('wrong password provided');\n                    }\n\n                } else if (error.request) {\n                    /*\n                     * The request was made but no response was received, `error.request`\n                     * is an instance of XMLHttpRequest in the browser and an instance\n                     * of http.ClientRequest in Node.js\n                     */\n                    setAlert({ loading: false });\n                    toaster.danger(\"Network Error\", {\n                        description: \"Its an issue on our end. Please check your network and reload this page and try again\"\n                    });\n                } else {\n                    // Something hinfoappened in setting up the request and triggered an Error\n                    setAlert({ loading: false });\n                    toaster.danger(\"An error occured, please try again\")\n                }\n            });\n    };\n\n    let windowObjectReference = null;\n    let previousUrl = null;\n\n    const openSignInWindow = (url) => {\n        // remove any existing event listeners\n        window.removeEventListener('message', receiveMessage);\n\n        if (windowObjectReference === null || windowObjectReference.closed) {\n            /* if the pointer to the window object in memory does not exist\n             or if such pointer exists but the window was closed */\n            windowObjectReference = window.open(url, '_blank');\n        } else if (previousUrl !== url) {\n            /* if the resource to load is different,\n             then we load it in the already opened secondary window and then\n             we bring such window back on top/in front of its parent window. */\n            windowObjectReference = window.open(url, '_blank');\n            windowObjectReference.focus();\n        } else {\n            /* else the window reference must exist and the window\n             is not closed; therefore, we can bring it back on top of any other\n             window with the focus() method. There would be no need to re-create\n             the window or to reload the referenced resource. */\n            windowObjectReference.focus();\n        }\n\n        // add the listener for receiving a message from the popup\n        window.addEventListener('message', event => receiveMessage(event), false);\n        // assign the previous URL\n        previousUrl = url;\n    };\n\n    const receiveMessage = (event) => {\n        if (event.origin !== window.location.origin) {\n            return;\n        }\n        const { data } = event; //extract data sent from popup\n        if (data.source === 'smswithoutborders') {\n            savePlatformOauthToken(id, token, \"google\", \"gmail\", data.code)\n                .then(response => {\n                    setAlert({ loading: false });\n                    toaster.success(\"Token stored successfully\");\n                    dispatch({\n                        type: \"LOGIN\",\n                        payload: {\n                            id: id,\n                            token: response.data.auth_key\n                        }\n                    });\n                    setAlert({ loading: false, notify: false });\n                    window.location.reload();\n                }).catch((error) => {\n                    toaster.danger(\"An error occured\", {\n                        description: \"Please Check your network connection and try again\"\n                    })\n                });\n        }\n    };\n\n    if (alert.loading) {\n        return <AnimateLoader />\n    }\n\n    return (\n        <>\n            <PageAnimationWrapper>\n                <Container>\n\n                    <Heading><IoWalletOutline /> &nbsp; Wallet</Heading>\n                    <Description>Save your tokens for rainy days</Description>\n\n                    <Row>\n                        <Column>\n                            {alert.platforms ? (\n                                <Paragraph style={{ marginTop: 30 }} rows={5} active />\n                            ) : (\n                                <Card>\n                                    <SubHeading>Providers</SubHeading>\n                                    <br />\n                                    {providers ? (\n                                        <>\n                                            {providers.map(provider => {\n                                                return (\n                                                    <Accordion header={< PlatformTitle > {provider?.provider}</PlatformTitle>} key={provider?.provider} collapsible={true} bordered>\n                                                        <p>Store your {provider?.provider} token which will be used for authentication on your behalf in the event\n                                                            of an internet shutdown.</p>\n                                                        <br />\n                                                        <p>You can define how this token will be used by setting the scopes of access</p>\n                                                        <br />\n                                                        <StoreContainer>\n                                                            <div>\n                                                                <PlatformTitle>Description</PlatformTitle>\n                                                                <PlatformDescription>{provider?.description}</PlatformDescription>\n\n                                                                <PlatformTitle>Platform</PlatformTitle>\n                                                                <PlatformDescription>{provider?.platforms[0].name}</PlatformDescription>\n\n                                                                <PlatformTitle>Type</PlatformTitle>\n                                                                <PlatformDescription>{provider?.platforms[0].type}</PlatformDescription>\n                                                            </div>\n                                                            <StoreButton\n                                                                type=\"submit\"\n                                                                appearance=\"primary\"\n                                                                height={40}\n                                                                iconBefore={FiSave}\n                                                                isLoading={alert.loading}\n                                                                onClick={() => getPlatformToken(provider?.provider, provider?.platforms[0].name)}\n                                                            >\n                                                                <span>{alert.loading ? \"Storing\" : \"Store\"}</span>\n                                                            </StoreButton>\n                                                        </StoreContainer>\n                                                    </Accordion>\n                                                )\n                                            })}\n                                        </>\n                                    ) : (\n                                        <p>No available providers</p>\n                                    )}\n                                </Card>\n                            )}\n                        </Column>\n                        <Column>\n                            {alert.platforms ? (\n                                <Paragraph style={{ marginTop: 30 }} rows={5} active />\n                            ) : (\n                                <Card>\n                                    <SubHeading>Saved tokens</SubHeading>\n                                    <br />\n                                    {tokens ? (\n                                        <>\n                                            {tokens.map(token => (\n                                                <Accordion header={< PlatformTitle > {token.provider}</PlatformTitle>} key={token.provider} collapsible bordered>\n                                                    <StoreContainer>\n                                                        <div>\n                                                            <PlatformTitle>Description</PlatformTitle>\n                                                            <PlatformDescription>{token.description}</PlatformDescription>\n\n                                                            <PlatformTitle>Platform</PlatformTitle>\n                                                            <PlatformDescription>{token.platforms[0].name}</PlatformDescription>\n\n                                                            <PlatformTitle>Email address</PlatformTitle>\n                                                            <PlatformDescription>{token.email}</PlatformDescription>\n                                                        </div>\n                                                        <StoreButton\n                                                            type=\"submit\"\n                                                            appearance=\"primary\"\n                                                            intent=\"danger\"\n                                                            height={40}\n                                                            disabled={id ? false : true}\n                                                            iconBefore={FiTrash2}\n                                                            isLoading={alert.loading}\n                                                            onClick={() => {\n                                                                setRevokedTokenDetails({\n                                                                    provider: token.provider,\n                                                                    platform: token.platforms[0].name\n                                                                });\n                                                                setAlert({ modal: true });\n                                                            }}\n                                                        >\n                                                            <span>{alert.loading ? \"Revoking\" : \"Revoke\"}</span>\n                                                        </StoreButton>\n                                                    </StoreContainer>\n                                                </Accordion>\n                                            ))}\n                                        </>\n                                    ) : (\n                                        <p>No stored tokens</p>\n                                    )}\n                                </Card>\n                            )}\n                        </Column>\n                    </Row>\n                </Container>\n\n                <Dialog\n                    isShown={alert.modal}\n                    title=\"Confirm action\"\n                    intent=\"danger\"\n                    hasClose={false}\n                    shouldCloseOnOverlayClick={false}\n                    shouldCloseOnEscapePress={false}\n                    isConfirmDisabled={isValid ? false : true}\n                    onConfirm={() => {\n                        handleRevokeToken(revokedTokenDetails.provider, revokedTokenDetails.platform);\n                        setAlert({ loading: true })\n                    }}\n                    onCloseComplete={() => setAlert({ modal: false })}\n                    confirmLabel=\"confirm revoke\"\n                >\n                    <h4 tw=\"text-xl font-medium\">Are you sure you want to delete this token from your account? This cannot be reversed</h4>\n                    <br />\n                    <p>Please enter you password to Confirm </p>\n                    <br />\n                    <Label>Password</Label>\n                    <div tw=\"relative\">\n                        <Input\n                            type={toggle ? \"text\" : \"password\"}\n                            placeholder=\"Password\"\n                            inputHeight={40}\n                            required\n                            minLength=\"8\"\n                            onChange={(evt) => {\n                                setPassword(evt.target.value);\n                                validatePassword();\n                            }}\n                        />\n                        <ToggleButton\n                            toggleFunc={setToggle}\n                            value={toggle}\n                        />\n                    </div>\n                </Dialog>\n            </PageAnimationWrapper>\n        </>\n    );\n}\n\nexport default Wallet;","import Wallet from './Wallet';\nexport default Wallet;","import React, { useEffect } from 'react';\n\nconst WalletRedirect = () => {\n    useEffect(() => {\n        // get the URL parameters which will include the auth token\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = searchParams.get(\"code\");\n\n        if (window.opener) {\n            // send them to the opening window\n            window.opener.postMessage(\n                {\n                    code: code,\n                    source: \"smswithoutborders\"\n                });\n            // set user key which will be used to identify the origin of this message\n            // close the popup\n            window.close();\n        }\n    });\n    // some text to show the user\n    return <p>Please wait...</p>;\n};\nexport default WalletRedirect;","import React from 'react';\nimport tw from \"twin.macro\";\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper\";\nimport useTitle from 'helpers/useTitle';\nimport { Link } from \"react-router-dom\";\n\nconst Heading = tw.h1`text-9xl font-black mb-8 tracking-wider`;\nconst Description = tw.p`mb-8 text-base md:text-lg leading-relaxed`;\nconst Container = tw.div`container grid place-items-center px-5 mx-auto py-12 lg:px-16 lg:py-24 text-gray-900 h-screen lg:mb-36 text-center`;\nconst Button = tw(Link)`block w-1/2 mx-auto my-8 px-6 py-4 text-lg text-white bg-primary-900 appearance-none hocus:text-white hocus:no-underline rounded-md`;\nconst NotFoundPage = () => {\n\n    useTitle(\"404 Not Found\");\n\n    return (\n        <PageAnimationWrapper>\n            <Container>\n                <div tw=\"p-8\">\n                    <Heading>4<span tw=\"text-primary-900\">0</span>4</Heading>\n                    <Description>Sorry this page is unavailable right now</Description>\n                    <Button to=\"/dashboard\">Back</Button>\n                </div>\n            </Container>\n\n        </PageAnimationWrapper>\n    );\n}\n\nexport default NotFoundPage;","import React, { useState } from 'react';\nimport tw, { styled } from \"twin.macro\";\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper\";\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport useTitle from 'helpers/useTitle';\nimport PhoneInput, { parsePhoneNumber } from \"react-phone-number-input\";\nimport flags from 'react-phone-number-input/flags'\nimport 'react-phone-number-input/style.css'\nimport { InlineLoader } from 'components/Loaders/AnimateLoader';\nimport { toaster } from 'evergreen-ui';\nimport { FiUser, FiTrash2, FiSettings, FiPlusCircle } from 'react-icons/fi';\nimport { changePassword, deleteAccount, addPhoneNumber, verifyPhoneNumber } from 'services/profile.service';\nimport { getToken, setToken, removeToken } from \"services/storage.service\";\nimport { ToggleButton } from \"components/misc/Buttons\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useAppContext } from 'App';\n\nconst Heading = tw.h1`font-bold text-4xl mb-4 inline-flex items-center`;\nconst Description = tw.p`mb-8 text-base md:text-lg leading-relaxed`;\nconst Title = tw.h2`text-2xl font-bold`;\nconst Container = tw.div`container px-5 mx-auto py-12 lg:px-16 lg:py-24 text-gray-900 lg:mb-36`;\nconst FormContainer = tw.div`w-full lg:w-2/3 mx-auto items-center justify-center mt-8 text-gray-900`;\nconst Form = tw.form`mx-auto sm:px-3`;\nconst Input = tw.input`relative w-full rounded-md p-3 mb-2 text-gray-700 border border-gray-400 hocus:border-primary-900`;\nconst Label = tw.label`block font-light mb-2`;\nconst FormGroup = tw.div`relative mb-4`;\nconst ErrorMessage = tw.p`text-sm text-red-900 mb-4`;\nconst SubmitButton = tw.button`inline-flex items-center justify-center text-center rounded-md w-full md:w-1/2 mx-auto p-3  bg-primary-900 text-white font-medium`\n\nconst NavButton = styled.button`\n  ${tw`inline-flex w-full h-16 items-center transition duration-300 bg-gray-100 hover:bg-primary-800 hocus:outline-none hocus:text-white text-xs md:text-sm text-gray-900 font-medium p-2 md:p-4 no-underline appearance-none mb-2`}\n  ${({ active }) => active && tw`bg-primary-900 text-white`}\n`;\n\nconst PhoneNumberInput = styled(PhoneInput)`\n    ${tw`p-3 border border-gray-400 hocus:border-primary-900 rounded-md mb-2`}\n  .PhoneInputCountrySelect {\n    ${tw`border-none hocus:border-none mr-8 p-4`}\n  }\n  .PhoneInputCountryIcon {\n    ${tw`border-none hocus:border-none h-5 w-7`}\n  }\n  .PhoneInputInput {\n    ${tw`focus:border-none focus:outline-none appearance-none placeholder-gray-400`}\n  }\n  .PhoneInputCountryIcon {\n    ${tw``}\n  }\n`;\n\n\nconst SettingsPage = () => {\n    useTitle(\"Settings\");\n    const [page, setPage] = useState(0);\n    return (\n        <PageAnimationWrapper>\n            <Container>\n                <div tw=\"text-center md:text-left\">\n                    <Heading><FiSettings /> &nbsp; Settings </Heading>\n                    <Description>Manage your account</Description>\n                </div>\n                <div tw=\"flex flex-col md:flex-row flex-wrap\">\n                    <div tw=\"flex flex-row md:flex-col w-full md:w-1/3\">\n                        <NavButton\n                            active={page === 1}\n                            onClick={() => setPage(1)}\n                        >\n                            <FiPlusCircle size={20} tw=\"mr-2\" /> Add Phone Number\n                        </NavButton>\n                        <NavButton\n                            active={page === 2}\n                            onClick={() => setPage(2)}\n                        >\n                            <FiUser size={20} tw=\"mr-2\" /> Change Password\n                        </NavButton>\n                        <NavButton\n                            active={page === 3}\n                            onClick={() => setPage(3)}\n                        >\n                            <FiTrash2 size={20} tw=\"mr-2\" /> Delete Account\n                        </NavButton>\n                    </div>\n\n                    <div tw=\"w-full md:w-2/3\">\n                        {page === 0 && (\n                            <div tw=\"grid place-items-center\">\n                                <div tw=\"p-8 text-center h-80\">\n                                    <FiSettings size={100} tw=\"mx-auto mb-4\" />\n                                    <Description>Please Select A setting from the menu</Description>\n                                </div>\n                            </div>\n                        )}\n                        {page === 1 && <NewNumber />}\n                        {page === 2 && <ChangePassword />}\n                        {page === 3 && <DeleteAccount />}\n\n                    </div>\n                </div>\n            </Container>\n        </PageAnimationWrapper>\n    );\n}\n\nconst ChangePasswordSchema = yup.object().shape({\n    password: yup.string().required('Password is required'),\n    new_password: yup.string().min(8, 'Password must be at least 8 characters').required('Please enter password'),\n    confirmPassword: yup.string().min(8, 'Password must be at least 8 characters').required('Please confirm your password')\n        .oneOf([yup.ref('new_password'), null], 'Passwords do not match')\n});\n\nconst ChangePassword = () => {\n\n    useTitle(\"Change Password\");\n    const { state, handleLogOut } = useAppContext();\n    const { token, id } = state;\n    const [loading, setLoading] = useState(false);\n    const [toggle, setToggle] = useState(false);\n    const [toggle2, setToggle2] = useState(false);\n    const [toggle3, setToggle3] = useState(false);\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({\n        resolver: yupResolver(ChangePasswordSchema)\n    });\n\n    const handleChangePassword = (data) => {\n        setLoading(true);\n        console.log(data)\n        changePassword(id, token, data.password, data.new_password)\n            .then(response => {\n                toaster.success(\"Password Changed successfully please login\");\n                setTimeout(() => { handleLogOut() }, 1000);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    toaster.danger(\"Request Error\", {\n                        description: \"Sorry we could not change your password. Please check your network connection and try again\"\n                    });\n                } else if (error.request) {\n                    toaster.danger(\"Network Error\", {\n                        description: \"We could not change your password. Please check your network and reload this page\"\n                    });\n                } else {\n                    toaster.danger(\"Profile Error\", {\n                        description: \"An internal error occured. Please log out and login again\"\n                    });\n                }\n                setLoading(false);\n            });\n    }\n\n    if (loading) return <InlineLoader />;\n\n    return (\n        <PageAnimationWrapper>\n            <div tw=\"md:border p-4 m-2\">\n                <div tw=\"w-full text-gray-800 text-center\">\n                    <Title>Change Password</Title>\n                    <p tw=\"my-2\">Please use the form below to change your password</p>\n                </div>\n\n                <FormContainer>\n                    <Form onSubmit={handleSubmit(handleChangePassword)}>\n                        <FormGroup>\n                            <Label>Current Password</Label>\n                            <div tw=\"relative\">\n                                <Input\n                                    tw=\"mb-2\"\n                                    type={toggle ? \"text\" : \"password\"}\n                                    placeholder=\"Password\"\n                                    {...register(\"password\")}\n                                />\n                                <ToggleButton\n                                    toggleFunc={setToggle}\n                                    value={toggle}\n                                />\n                            </div>\n                            {errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n                        </FormGroup>\n\n\n                        <FormGroup>\n                            <Label>New Password</Label>\n                            <div tw=\"relative\">\n                                <Input\n                                    tw=\"mb-2\"\n                                    type={toggle2 ? \"text\" : \"password\"}\n                                    placeholder=\"New Password\"\n                                    {...register(\"new_password\")}\n                                />\n                                <ToggleButton\n                                    toggleFunc={setToggle2}\n                                    value={toggle2}\n                                />\n                            </div>\n                            {errors.new_password && <ErrorMessage>{errors.new_password.message}</ErrorMessage>}\n                            <PasswordStrengthBar password={watch('new_password')} />\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label>Confirm Password</Label>\n                            <div tw=\"relative\">\n                                <Input\n                                    tw=\"mb-2\"\n                                    type={toggle3 ? \"text\" : \"password\"}\n                                    placeholder=\"retype password\"\n                                    {...register(\"confirmPassword\")}\n                                />\n                                <ToggleButton\n                                    toggleFunc={setToggle3}\n                                    value={toggle3}\n                                />\n                            </div>\n                            {errors.confirmPassword && <ErrorMessage>{errors.confirmPassword.message}</ErrorMessage>}\n                            <PasswordStrengthBar password={watch(\"confirmPassword\")} />\n                        </FormGroup>\n\n                        <SubmitButton type=\"submit\">\n                            Change Password\n                        </SubmitButton>\n                    </Form>\n                </FormContainer>\n            </div>\n        </PageAnimationWrapper>\n    );\n}\n\nconst DeleteAccountSchema = yup.object().shape({\n    password: yup.string().required('Password is required')\n});\n\nconst DeleteAccount = () => {\n\n    useTitle(\"Delete Account\");\n\n    const { state, handleLogOut } = useAppContext();\n    const { token, id } = state;\n    const [loading, setLoading] = useState(false);\n    const [toggle, setToggle] = useState(false);\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        resolver: yupResolver(DeleteAccountSchema)\n    });\n\n    const handleChangePassword = (data) => {\n        setLoading(true);\n        deleteAccount(id, token, data.password)\n            .then(response => {\n                toaster.success(\"Account Deleted\", {\n                    description: \"We are sad to see you go\"\n                });\n                setTimeout(() => { handleLogOut() }, 1000);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    toaster.danger(\"Request Error\", {\n                        description: \"Sorry we could not delete your account. Please check your network connection and try again\"\n                    });\n                } else if (error.request) {\n                    toaster.danger(\"Network Error\", {\n                        description: \"We could not delete your account. Please check your network and reload this page\"\n                    });\n                } else {\n                    toaster.danger(\"Profile Error\", {\n                        description: \"We could not delete your account. Please check your network and reload this page\"\n                    });\n                }\n                setLoading(false);\n            });\n    }\n\n    if (loading) return <InlineLoader />;\n\n    return (\n        <PageAnimationWrapper>\n            <div tw=\"md:border p-4 m-2\">\n                <div tw=\"w-full text-gray-800 text-center\">\n                    <Title tw=\"text-red-900\">Delete Account</Title>\n                    <p tw=\"my-2\">This action cannot be reversed. Please enter your password to confirm</p>\n                </div>\n\n                <FormContainer>\n                    <Form onSubmit={handleSubmit(handleChangePassword)}>\n                        <FormGroup>\n                            <Label>Current Password</Label>\n                            <div tw=\"relative\">\n                                <Input\n                                    tw=\"mb-2\"\n                                    type={toggle ? \"text\" : \"password\"}\n                                    placeholder=\"Password\"\n                                    {...register(\"password\")}\n                                />\n                                <ToggleButton\n                                    toggleFunc={setToggle}\n                                    value={toggle}\n                                />\n                            </div>\n                            {errors.password && <ErrorMessage>{errors.password.message}</ErrorMessage>}\n                        </FormGroup>\n\n                        <SubmitButton\n                            tw=\"bg-red-900\"\n                            type=\"submit\"\n                        >\n                            <FiTrash2 size={20} /> &nbsp; Delete Account\n                        </SubmitButton>\n                    </Form>\n                </FormContainer>\n            </div>\n        </PageAnimationWrapper>\n    );\n}\n\n\nconst NewNumberSchema = yup.object().shape({\n    phone_number: yup.string().required('Please enter a valid phone number')\n});\n\nconst NewNumber = () => {\n\n    useTitle(\"Add Phone Number\");\n    const { state } = useAppContext();\n    const { token, id } = state;\n    const [page, setPage] = useState(0);\n    const [loading, setLoading] = useState(false);\n\n    const { control, handleSubmit, formState: { errors } } = useForm({\n        resolver: yupResolver(NewNumberSchema)\n    });\n\n    const handleAddNumber = (data) => {\n        setLoading(true);\n\n        let splitNumber = parsePhoneNumber(data.phone_number);\n        data.phone_number = splitNumber.nationalNumber;\n        data.country_code = \"+\" + splitNumber.countryCallingCode;\n\n        addPhoneNumber(id, token, data.country_code, data.phone_number)\n            .then(response => {\n                if (response.status === 200) {\n                    toaster.success(\"Success\", {\n                        description: \"A verification code has been sent to your phone\"\n                    });\n                    setToken(response.data);\n                    setPage(2);\n                    setLoading(false);\n                }\n            })\n            .catch((error) => {\n                if (error.response) {\n                    switch (error.response.status) {\n                        case 400:\n                            toaster.danger(\"An error occured\", {\n                                description: \"Its not your its Us. Please try again\"\n                            });\n                            break;\n\n                        case 401:\n                            toaster.danger(\"Invalid code provided\", {\n                                description: \"please try again\"\n                            });\n                            break;\n\n                        case 403:\n                            toaster.notify(\"Account already verified\", {\n                                description: \"Please login\"\n                            });\n                            break;\n\n                        case 409:\n                            toaster.danger(\"An error occured\", {\n                                description: \"An account with this number already exists\"\n                            });\n                            break;\n\n                        case 500:\n                            toaster.danger(\"An error occured\", {\n                                description: \"Its not you its Us. We are working to resolve it. Please try again\"\n                            });\n                            break;\n\n                        default:\n                            toaster.danger(\"Something went wrong\", {\n                                description: \"Please try again\"\n                            });\n                    }\n                } else if (error.request) {\n                    toaster.danger(\"Network Error\", {\n                        description: \"We could not change your password. Please check your network and reload this page\"\n                    });\n                } else {\n                    toaster.danger(\"Profile Error\", {\n                        description: \"An internal error occured. Please log out and login again\"\n                    });\n                }\n                setLoading(false);\n            });\n    }\n\n    if (page === 2) return <CodeVerifyPage />\n\n    if (loading) return <InlineLoader />;\n\n    return (\n        <PageAnimationWrapper>\n            <div tw=\"md:border p-4 m-2\">\n                <div tw=\"w-full text-gray-800 text-center\">\n                    <Title>Add Phone Number</Title>\n                    <p tw=\"my-2\">Here, you can add a new phone number to your account</p>\n                </div>\n\n                <FormContainer>\n                    <Form onSubmit={handleSubmit(handleAddNumber)}>\n                        <FormGroup>\n                            <Label>Phone Number</Label>\n                            <Controller\n                                control={control}\n                                name=\"phone_number\"\n                                render={({ field: { value, onChange } }) => (\n                                    <PhoneNumberInput\n                                        flags={flags}\n                                        international\n                                        countryCallingCodeEditable={false}\n                                        placeholder=\"Enter your phone number\"\n                                        defaultCountry=\"CM\"\n                                        value={value}\n                                        type=\"tel\"\n                                        onChange={onChange}\n                                    />\n                                )}\n                            />\n                            {errors.phone_number && <ErrorMessage>{errors.phone_number.message}</ErrorMessage>}\n                        </FormGroup>\n\n                        <SubmitButton type=\"submit\">\n                            <FiPlusCircle size={20} /> &nbsp; Add Number\n                        </SubmitButton>\n                    </Form>\n                </FormContainer>\n            </div>\n        </PageAnimationWrapper>\n    );\n}\n\n\nconst CodeVerifyPage = ({ setPage }) => {\n\n    const [code, setCode] = useState();\n    const [loading, setLoading] = useState(false);\n\n    const handleCodeVerification = (evt) => {\n\n        evt.preventDefault();\n\n        setLoading(true);\n\n        const session = getToken();\n\n        verifyPhoneNumber(code, session.session_id, session.svid)\n            .then(response => {\n                if (response.status === 200) {\n                    toaster.success(\"Success, Code Verified\", {\n                        description: \"Your new phone number has been added\"\n                    });\n                    removeToken()\n                    setTimeout(() => {\n                        window.location.reload();\n                        setLoading(false);\n                    }, 1000);\n\n                }\n            })\n            .catch(error => {\n                if (error.response) {\n                    switch (error.response.status) {\n                        case 400:\n                            toaster.danger(\"An error occured\", {\n                                description: \"Its not your its Us. Please try again\"\n                            });\n                            break;\n\n                        case 401:\n                            toaster.danger(\"Invalid code provided\", {\n                                description: \"please try again\"\n                            });\n                            break;\n\n                        case 403:\n                            toaster.notify(\"Account already verified\", {\n                                description: \"Please login\"\n                            });\n                            break;\n\n                        case 409:\n                            toaster.danger(\"An error occured\", {\n                                description: \"An account with this number already exists.Please Log In instead\"\n                            });\n                            break;\n\n                        case 500:\n                            toaster.danger(\"An error occured\", {\n                                description: \"Its not you its Us. We are working to resolve it. Please try again\"\n                            });\n                            break;\n\n                        default:\n                            toaster.danger(\"Something went wrong\", {\n                                description: \"Please try again\"\n                            });\n                    }\n                    setLoading(false);\n                } else if (error.request) {\n                    toaster.danger(\"Network error\", {\n                        description: \"Please check your network and try again\"\n                    });\n                } else {\n                    toaster.danger(\"Network error\", {\n                        description: \"Please check your network and try again\"\n                    })\n                }\n                setLoading(false);\n            })\n    }\n\n    if (loading) return <InlineLoader />;\n\n    return (\n        <PageAnimationWrapper>\n            <div tw=\"md:border p-4 m-2\">\n                <div tw=\"w-full text-gray-800 text-center\">\n                    <Title>Enter Verification Code</Title>\n                    <p tw=\"my-2\">Please enter the code sent to you to confirm this operation</p>\n                </div>\n                <FormContainer>\n                    <Form onSubmit={(evt) => handleCodeVerification(evt)}>\n                        <FormGroup>\n                            <Input\n                                tw=\"p-3\"\n                                type=\"number\"\n                                name=\"code\"\n                                min={0}\n                                required\n                                placeholder=\"2FA CODE\"\n                                onChange={(evt) => setCode(evt.target.value)}\n                            />\n                        </FormGroup>\n\n                        <SubmitButton type=\"submit\">\n                            continue\n                        </SubmitButton>\n\n                    </Form>\n                </FormContainer>\n            </div>\n        </PageAnimationWrapper>\n    )\n}\n\n\n\nexport default SettingsPage;","import React from \"react\";\nimport { Navbar, Footer } from \"components\";\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper\";\nimport Profile from 'content/Profile';\nimport Wallet from 'content/Wallet';\nimport WalletRedirect from 'content/Wallet/WalletRedirect';\nimport NotFoundPage from \"content/NotFoundPage\";\nimport SettingsPage from \"content/SettingsPage\";\n\n\nconst DashBoard = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <>\n      <PageAnimationWrapper>\n        <Navbar />\n        <Switch>\n          <Route exact path={path} component={Profile} />\n          <Route exact path={`${path}/profile`} component={Profile} />\n          <Route exact path={`${path}/settings`} component={SettingsPage} />\n          <Route exact path={`${path}/wallet`} component={Wallet} />\n          <Route exact path={`${path}/oauth2/google/Tokens/redirect/`} component={WalletRedirect} />\n          <Route component={NotFoundPage} />\n        </Switch>\n        <Footer />\n      </PageAnimationWrapper>\n    </>\n  );\n};\n\n\nexport default DashBoard;\n","import React from 'react';\nimport tw from \"twin.macro\";\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper\";\nimport { Text, HeadingRow, Heading, MainNavbar, Footer } from \"components\";\n\nconst Container = tw.div`container px-5 mx-auto py-12  lg:p-24 text-gray-900 bg-gray-100`;\n\nconst PrivacyPage = () => {\n\n    return (\n        <PageAnimationWrapper>\n            <MainNavbar />\n            <Container>\n                <HeadingRow>\n                    <Heading>Privacy Policy</Heading>\n                </HeadingRow>\n                <Text>\n                    <p>Last updated: April 16, 2021</p>\n                    <p>This Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your information when You use the Service and tells You about Your privacy rights and how the law protects You.</p>\n                    <p>We use Your Personal data to provide and improve the Service. By using the Service, You agree to the collection and use of information in accordance with this Privacy Policy. </p>\n                    {/* <!-- This Privacy Policy has been created with the help of the <a href=\"https://www.privacypolicies.com/privacy-policy-generator/\" target=\"_blank\">Privacy Policy Generator</a>.--> */}\n                    <h1>Interpretation and Definitions</h1>\n                    <h2>Interpretation</h2>\n                    <p>The words of which the initial letter is capitalized have meanings defined under the following conditions. The following definitions shall have the same meaning regardless of whether they appear in singular or in plural.</p>\n                    <h2>Definitions</h2>\n                    <p>For the purposes of this Privacy Policy:</p>\n                    <ul>\n                        <li>\n                            <p><strong>Account</strong> means a unique account created for You to access our Service or parts of our Service.</p>\n                        </li>\n                        <li>\n                            <p><strong>Company</strong> (referred to as either &quot;the Company&quot;, &quot;We&quot;, &quot;Us&quot; or &quot;Our&quot; in this Agreement) refers to Afkanerd Ltd, Bamenda.</p>\n                        </li>\n                        <li>\n                            <p><strong>Cookies</strong> are small files that are placed on Your computer, mobile device or any other device by a website, containing the details of Your browsing history on that website among its many uses.</p>\n                        </li>\n                        <li>\n                            <p><strong>Country</strong> refers to:  Cameroon</p>\n                        </li>\n                        <li>\n                            <p><strong>Device</strong> means any device that can access the Service such as a computer, a cellphone or a digital tablet.</p>\n                        </li>\n                        <li>\n                            <p><strong>Personal Data</strong> is any information that relates to an identified or identifiable individual.</p>\n                        </li>\n                        <li>\n                            <p><strong>Service</strong> refers to the Website.</p>\n                        </li>\n                        <li>\n                            <p><strong>Service Provider</strong> means any natural or legal person who processes the data on behalf of the Company. It refers to third-party companies or individuals employed by the Company to facilitate the Service, to provide the Service on behalf of the Company, to perform services related to the Service or to assist the Company in analyzing how the Service is used.</p>\n                        </li>\n                        <li>\n                            <p><strong>Third-party Social Media Service</strong> refers to any website or any social network website through which a User can log in or create an account to use the Service.</p>\n                        </li>\n                        <li>\n                            <p><strong>Usage Data</strong> refers to data collected automatically, either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit).</p>\n                        </li>\n                        <li>\n                            <p><strong>Website</strong> refers to SMSwithoutborders, accessible from <a href=\"https://smswithoutborders.com\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://smswithoutborders.com</a></p>\n                        </li>\n                        <li>\n                            <p><strong>You</strong> means the individual accessing or using the Service, or the company, or other legal entity on behalf of which such individual is accessing or using the Service, as applicable.</p>\n                        </li>\n                    </ul>\n                    <h1>Collecting and Using Your Personal Data</h1>\n                    <h2>Types of Data Collected</h2>\n                    <h3>Personal Data</h3>\n                    <p>While using Our Service, We may ask You to provide Us with certain personally identifiable information that can be used to contact or identify You. Personally identifiable information may include, but is not limited to:</p>\n                    <ul>\n                        <li>\n                            <p>Phone number</p>\n                        </li>\n                        <li>\n                            <p>Usage Data</p>\n                        </li>\n                    </ul>\n                    <h3>Usage Data</h3>\n                    <p>Usage Data is collected automatically when using the Service.</p>\n                    <p>Usage Data may include information such as Your Device's Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that You visit, the time and date of Your visit, the time spent on those pages, unique device identifiers and other diagnostic data.</p>\n                    <p>When You access the Service by or through a mobile device, We may collect certain information automatically, including, but not limited to, the type of mobile device You use, Your mobile device unique ID, the IP address of Your mobile device, Your mobile operating system, the type of mobile Internet browser You use, unique device identifiers and other diagnostic data.</p>\n                    <p>We may also collect information that Your browser sends whenever You visit our Service or when You access the Service by or through a mobile device.</p>\n                    <h3>Information from Third-Party Social Media Services</h3>\n                    <p>The Company allows You to create an account and log in to use the Service through the following Third-party Social Media Services:</p>\n                    <ul>\n                        <li>Google</li>\n                        <li>Facebook</li>\n                        <li>Twitter</li>\n                    </ul>\n                    <p>If You decide to register through or otherwise grant us access to a Third-Party Social Media Service, We may collect Personal data that is already associated with Your Third-Party Social Media Service's account, such as Your name, Your email address, Your activities or Your contact list associated with that account.</p>\n                    <p>You may also have the option of sharing additional information with the Company through Your Third-Party Social Media Service's account. If You choose to provide such information and Personal Data, during registration or otherwise, You are giving the Company permission to use, share, and store it in a manner consistent with this Privacy Policy.</p>\n                    <h3>Tracking Technologies and Cookies</h3>\n                    <p>We use Cookies and similar tracking technologies to track the activity on Our Service and store certain information. Tracking technologies used are beacons, tags, and scripts to collect and track information and to improve and analyze Our Service. The technologies We use may include:</p>\n                    <ul>\n                        <li><strong>Cookies or Browser Cookies.</strong> A cookie is a small file placed on Your Device. You can instruct Your browser to refuse all Cookies or to indicate when a Cookie is being sent. However, if You do not accept Cookies, You may not be able to use some parts of our Service. Unless you have adjusted Your browser setting so that it will refuse Cookies, our Service may use Cookies.</li>\n                        <li><strong>Flash Cookies.</strong> Certain features of our Service may use local stored objects (or Flash Cookies) to collect and store information about Your preferences or Your activity on our Service. Flash Cookies are not managed by the same browser settings as those used for Browser Cookies. For more information on how You can delete Flash Cookies, please read &quot;Where can I change the settings for disabling, or deleting local shared objects?&quot; available at <a href=\"https://helpx.adobe.com/flash-player/kb/disable-local-shared-objects-flash.html#main_Where_can_I_change_the_settings_for_disabling__or_deleting_local_shared_objects_\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">https://helpx.adobe.com/flash-player/kb/disable-local-shared-objects-flash.html#main_Where_can_I_change_the_settings_for_disabling__or_deleting_local_shared_objects_</a></li>\n                        <li><strong>Web Beacons.</strong> Certain sections of our Service and our emails may contain small electronic files known as web beacons (also referred to as clear gifs, pixel tags, and single-pixel gifs) that permit the Company, for example, to count users who have visited those pages or opened an email and for other related website statistics (for example, recording the popularity of a certain section and verifying system and server integrity).</li>\n                    </ul>\n                    <p>Cookies can be &quot;Persistent&quot; or &quot;Session&quot; Cookies. Persistent Cookies remain on Your personal computer or mobile device when You go offline, while Session Cookies are deleted as soon as You close Your web browser. Learn more about cookies: <a href=\"https://www.privacypolicies.com/blog/cookies/\" target=\"_blank\" rel=\"noreferrer\">What Are Cookies?</a>.</p>\n                    <p>We use both Session and Persistent Cookies for the purposes set out below:</p>\n                    <ul>\n                        <li>\n                            <p><strong>Necessary / Essential Cookies</strong></p>\n                            <p>Type: Session Cookies</p>\n                            <p>Administered by: Us</p>\n                            <p>Purpose: These Cookies are essential to provide You with services available through the Website and to enable You to use some of its features. They help to authenticate users and prevent fraudulent use of user accounts. Without these Cookies, the services that You have asked for cannot be provided, and We only use these Cookies to provide You with those services.</p>\n                        </li>\n                        <li>\n                            <p><strong>Cookies Policy / Notice Acceptance Cookies</strong></p>\n                            <p>Type: Persistent Cookies</p>\n                            <p>Administered by: Us</p>\n                            <p>Purpose: These Cookies identify if users have accepted the use of cookies on the Website.</p>\n                        </li>\n                        <li>\n                            <p><strong>Functionality Cookies</strong></p>\n                            <p>Type: Persistent Cookies</p>\n                            <p>Administered by: Us</p>\n                            <p>Purpose: These Cookies allow us to remember choices You make when You use the Website, such as remembering your login details or language preference. The purpose of these Cookies is to provide You with a more personal experience and to avoid You having to re-enter your preferences every time You use the Website.</p>\n                        </li>\n                    </ul>\n                    <p>For more information about the cookies we use and your choices regarding cookies, please visit our Cookies Policy or the Cookies section of our Privacy Policy.</p>\n                    <h2>Use of Your Personal Data</h2>\n                    <p>The Company may use Personal Data for the following purposes:</p>\n                    <ul>\n                        <li>\n                            <p><strong>To provide and maintain our Service</strong>, including to monitor the usage of our Service.</p>\n                        </li>\n                        <li>\n                            <p><strong>To manage Your Account:</strong> to manage Your registration as a user of the Service. The Personal Data You provide can give You access to different functionalities of the Service that are available to You as a registered user.</p>\n                        </li>\n                        <li>\n                            <p><strong>For the performance of a contract:</strong> the development, compliance and undertaking of the purchase contract for the products, items or services You have purchased or of any other contract with Us through the Service.</p>\n                        </li>\n                        <li>\n                            <p><strong>To contact You:</strong> To contact You by email, telephone calls, SMS, or other equivalent forms of electronic communication, such as a mobile application's push notifications regarding updates or informative communications related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for their implementation.</p>\n                        </li>\n                        <li>\n                            <p><strong>To provide You</strong> with news, special offers and general information about other goods, services and events which we offer that are similar to those that you have already purchased or enquired about unless You have opted not to receive such information.</p>\n                        </li>\n                        <li>\n                            <p><strong>To manage Your requests:</strong> To attend and manage Your requests to Us.</p>\n                        </li>\n                        <li>\n                            <p><strong>For business transfers:</strong> We may use Your information to evaluate or conduct a merger, divestiture, restructuring, reorganization, dissolution, or other sale or transfer of some or all of Our assets, whether as a going concern or as part of bankruptcy, liquidation, or similar proceeding, in which Personal Data held by Us about our Service users is among the assets transferred.</p>\n                        </li>\n                        <li>\n                            <p><strong>For other purposes</strong>: We may use Your information for other purposes, such as data analysis, identifying usage trends, determining the effectiveness of our promotional campaigns and to evaluate and improve our Service, products, services, marketing and your experience.</p>\n                        </li>\n                    </ul>\n                    <p>We may share Your personal information in the following situations:</p>\n                    <ul>\n                        <li><strong>With Service Providers:</strong> We may share Your personal information with Service Providers to monitor and analyze the use of our Service,  to contact You.</li>\n                        <li><strong>For business transfers:</strong> We may share or transfer Your personal information in connection with, or during negotiations of, any merger, sale of Company assets, financing, or acquisition of all or a portion of Our business to another company.</li>\n                        <li><strong>With Affiliates:</strong> We may share Your information with Our affiliates, in which case we will require those affiliates to honor this Privacy Policy. Affiliates include Our parent company and any other subsidiaries, joint venture partners or other companies that We control or that are under common control with Us.</li>\n                        <li><strong>With business partners:</strong> We may share Your information with Our business partners to offer You certain products, services or promotions.</li>\n                        <li><strong>With other users:</strong> when You share personal information or otherwise interact in the public areas with other users, such information may be viewed by all users and may be publicly distributed outside. If You interact with other users or register through a Third-Party Social Media Service, Your contacts on the Third-Party Social Media Service may see Your name, profile, pictures and description of Your activity. Similarly, other users will be able to view descriptions of Your activity, communicate with You and view Your profile.</li>\n                        <li><strong>With Your consent</strong>: We may disclose Your personal information for any other purpose with Your consent.</li>\n                    </ul>\n                    <h2>Retention of Your Personal Data</h2>\n                    <p>The Company will retain Your Personal Data only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use Your Personal Data to the extent necessary to comply with our legal obligations (for example, if we are required to retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.</p>\n                    <p>The Company will also retain Usage Data for internal analysis purposes. Usage Data is generally retained for a shorter period of time, except when this data is used to strengthen the security or to improve the functionality of Our Service, or We are legally obligated to retain this data for longer time periods.</p>\n                    <h2>Transfer of Your Personal Data</h2>\n                    <p>Your information, including Personal Data, is processed at the Company's operating offices and in any other places where the parties involved in the processing are located. It means that this information may be transferred to — and maintained on — computers located outside of Your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from Your jurisdiction.</p>\n                    <p>Your consent to this Privacy Policy followed by Your submission of such information represents Your agreement to that transfer.</p>\n                    <p>The Company will take all steps reasonably necessary to ensure that Your data is treated securely and in accordance with this Privacy Policy and no transfer of Your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of Your data and other personal information.</p>\n                    <h2>Disclosure of Your Personal Data</h2>\n                    <h3>Business Transactions</h3>\n                    <p>If the Company is involved in a merger, acquisition or asset sale, Your Personal Data may be transferred. We will provide notice before Your Personal Data is transferred and becomes subject to a different Privacy Policy.</p>\n                    <h3>Law enforcement</h3>\n                    <p>Under certain circumstances, the Company may be required to disclose Your Personal Data if required to do so by law or in response to valid requests by public authorities (e.g. a court or a government agency).</p>\n                    <h3>Other legal requirements</h3>\n                    <p>The Company may disclose Your Personal Data in the good faith belief that such action is necessary to:</p>\n                    <ul>\n                        <li>Comply with a legal obligation</li>\n                        <li>Protect and defend the rights or property of the Company</li>\n                        <li>Prevent or investigate possible wrongdoing in connection with the Service</li>\n                        <li>Protect the personal safety of Users of the Service or the public</li>\n                        <li>Protect against legal liability</li>\n                    </ul>\n                    <h2>Security of Your Personal Data</h2>\n                    <p>The security of Your Personal Data is important to Us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While We strive to use commercially acceptable means to protect Your Personal Data, We cannot guarantee its absolute security.</p>\n\n                    <div id=\"opt-out\">\n                        <h2 >Opting out and data deletion</h2>\n                        <p>You can opt out of our service at will. This will trigger a complete deletion of your personal data from our system within a 24 hours time frame. We can only delete personal data we have stored on our database. Deletion of personnel from other third party databases even if linked from our service will have to be requested directly from the third party. We provide information on how to perform this for each third party service we provide. Please read the “Information page” linked below all the buttons for third party services we provide.</p>\n                    </div>\n\n                    <h1>Children's Privacy</h1>\n                    <p>Our Service does not address anyone under the age of 13. We do not knowingly collect personally identifiable information from anyone under the age of 13. If You are a parent or guardian and You are aware that Your child has provided Us with Personal Data, please contact Us. If We become aware that We have collected Personal Data from anyone under the age of 13 without verification of parental consent, We take steps to remove that information from Our servers.</p>\n                    <p>If We need to rely on consent as a legal basis for processing Your information and Your country requires consent from a parent, We may require Your parent's consent before We collect and use that information.</p>\n                    <h1>Links to Other Websites</h1>\n                    <p>Our Service may contain links to other websites that are not operated by Us. If You click on a third party link, You will be directed to that third party's site. We strongly advise You to review the Privacy Policy of every site You visit.</p>\n                    <p>We have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.</p>\n                    <h1>Changes to this Privacy Policy</h1>\n                    <p>We may update Our Privacy Policy from time to time. We will notify You of any changes by posting the new Privacy Policy on this page.</p>\n                    <p>We will let You know via email and/or a prominent notice on Our Service, prior to the change becoming effective and update the &quot;Last updated&quot; date at the top of this Privacy Policy.</p>\n                    <p>You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.</p>\n                    <h1>Contact Us</h1>\n                    <p>If you have any questions about this Privacy Policy, You can contact us:</p>\n                    <ul>\n                        <li>By visiting this page on our website: <a href=\"smswithoutborders.com/contact-us\" rel=\"external nofollow noopener noreferrer\" target=\"_blank\">Contact Us</a></li>\n                    </ul>\n                </Text>\n            </Container>\n            <Footer />\n\n        </PageAnimationWrapper>\n    );\n}\n\nexport default PrivacyPage;","import React from \"react\";\nimport tw from \"twin.macro\";\nimport PageAnimationWrapper from \"helpers/PageAnimationWrapper\";\nimport { FiMail, FiGlobe, FiMessageSquare } from \"react-icons/fi\";\nimport { MainNavbar, Footer } from \"components\";\n\nconst Container = tw.section`md:px-8 mx-auto text-gray-900 h-screen md:pt-24`;\nconst TextContainer = tw.div`flex-grow text-left mt-6 sm:mt-0`;\nconst Heading = tw.h1`font-black text-4xl sm:text-5xl mb-8  text-gray-900`;\nconst SubHeading = tw.h2`text-gray-900 text-sm md:text-base mb-2 leading-relaxed font-bold`;\nconst DescItem = tw.div`flex flex-row items-center pb-5 border-gray-200 lg:mx-auto `;\nconst IconBlock = tw.div`h-16 w-16 mr-2 sm:mr-4 inline-flex items-center justify-center rounded-full bg-white shadow-xl text-primary-900 flex-shrink-0`;\nconst Text = tw.p`leading-relaxed text-sm md:text-base`;\nconst Column = tw.div`mx-auto h-full flex flex-col lg:flex-row items-start px-4`;\nconst Row = tw.div`w-full`;\n\nconst ContactPage = () => {\n    return (\n        <>\n            <MainNavbar />\n            <PageAnimationWrapper>\n                <Container>\n                    <Row tw=\"pt-20 pb-12\">\n                        <Heading tw=\"text-center\">Contact Us</Heading>\n                        <SubHeading tw=\"text-center font-normal\">Using SWOB is as easy as authenticating your credentials</SubHeading>\n                    </Row>\n\n                    <Column>\n                        <DescItem>\n                            <IconBlock>\n                                <FiMail size={28} />\n                            </IconBlock>\n\n                            <TextContainer>\n                                <Text>Email</Text>\n                                <SubHeading>developers@smswithoutborders.com </SubHeading>\n                            </TextContainer>\n                        </DescItem>\n                        <DescItem>\n                            <IconBlock>\n                                <FiMessageSquare size={28} />\n                            </IconBlock>\n                            <TextContainer>\n                                <Text>IRC</Text>\n                                <SubHeading>freenode/#afkanerd</SubHeading>\n                            </TextContainer>\n                        </DescItem>\n                        <DescItem>\n                            <IconBlock>\n                                <FiGlobe size={28} />\n                            </IconBlock>\n                            <TextContainer>\n                                <Text>website</Text>\n                                <SubHeading>https://smswithoutborders.com</SubHeading>\n                            </TextContainer>\n                        </DescItem>\n                    </Column>\n                </Container>\n            </PageAnimationWrapper>\n            <Footer />\n        </>\n    )\n}\n\nexport default ContactPage;","import React, { useReducer, useEffect } from 'react';\nimport './App.css';\nimport \"rsuite/dist/styles/rsuite-default.css\";\nimport \"tailwindcss/dist/base.css\";\nimport Login from \"content/Login\";\nimport SignUp from \"content/SignUp\"\nimport HomePage from 'content/HomePage';\nimport DashBoard from \"content/DashBoard\";\nimport PrivacyPage from 'content/PrivacyPage';\nimport ContactPage from 'content/ContactPage';\nimport AnimateLoader from \"components/Loaders/AnimateLoader\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { getLocalState, setLocalState, clearLocalState, removeToken, removeProfile } from \"services/storage.service\";\n\nconst AppContext = React.createContext();\nexport const useAppContext = () => React.useContext(AppContext);\n\nconst Reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\": {\n      return {\n        ...state,\n        id: action.payload.id,\n        token: action.payload.token\n      }\n    }\n    case \"SETUSERPROFILE\": {\n      return {\n        ...state,\n        userProfile: action.payload\n      }\n    }\n    case \"LOGOUT\": {\n      return {\n        ...state,\n        id: action.payload.id,\n        token: action.payload.token,\n        userProfile: action.payload.userProfile\n      }\n    }\n    case 'loading': {\n      return {\n        ...state,\n        loading: action.payload\n      }\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`)\n    }\n  }\n};\n\n\nlet localState = getLocalState();\nlet initialState = localState || {\n  id: \"\",\n  token: \"\",\n  userProfile: {},\n  loading: false\n}\n\n\nconst App = () => {\n\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  const { token, loading } = state;\n\n  useEffect(() => {\n    setLocalState(state);\n    initialState = getLocalState();\n  }, [state])\n\n\n  const handleLogOut = () => {\n    //remove user token from session storage\n    dispatch({ type: \"loading\", payload: true })\n    dispatch({\n      type: \"LOGOUT\",\n      payload: {\n        id: \"\",\n        token: \"\",\n        userProfile: {}\n      }\n    });\n    removeToken();\n    removeProfile();\n    clearLocalState();\n    dispatch({ type: \"loading\", payload: false })\n  }\n\n  if (loading) {\n    return (\n      <AnimateLoader />\n    );\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        state,\n        dispatch,\n        handleLogOut\n      }}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n\n          <Route exact path=\"/privacy-policy\">\n            <PrivacyPage />\n          </Route>\n          <Route exact path=\"/contact-us\">\n            <ContactPage />\n          </Route>\n\n          <Route path=\"/dashboard\">\n            {token ? <DashBoard /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route exact path=\"/login\">\n            {token ? <Redirect to=\"/dashboard\" /> : <Login />}\n          </Route>\n          <Route exact path=\"/sign-up\">\n            <SignUp />\n          </Route>\n        </Switch>\n      </Router>\n    </AppContext.Provider>\n  );\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}